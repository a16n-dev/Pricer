[{"D:\\project\\Pricer\\Pricer\\client\\src\\reportWebVitals.ts":"1","D:\\project\\Pricer\\Pricer\\client\\src\\App.tsx":"2","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\auth\\Login.tsx":"3","D:\\project\\Pricer\\Pricer\\client\\src\\index.tsx":"4","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\dashboard\\Dashboard.tsx":"5","D:\\project\\Pricer\\Pricer\\client\\src\\components\\Navbar.tsx":"6","D:\\project\\Pricer\\Pricer\\client\\src\\util\\LoggerService.ts":"7","D:\\project\\Pricer\\Pricer\\client\\src\\util\\AuthService.ts":"8","D:\\project\\Pricer\\Pricer\\client\\src\\aws-exports.js":"9","D:\\project\\Pricer\\Pricer\\client\\src\\routes\\PublicRoutes.tsx":"10","D:\\project\\Pricer\\Pricer\\client\\src\\routes\\routeMap.tsx":"11","D:\\project\\Pricer\\Pricer\\client\\src\\routes\\ProtectedRoutes.tsx":"12","D:\\project\\Pricer\\Pricer\\client\\src\\redux\\store.ts":"13","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\product\\ProductIndex.tsx":"14","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\product\\CreateProduct.tsx":"15","D:\\project\\Pricer\\Pricer\\client\\src\\routes\\protected\\ProductRoutes.tsx":"16","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\product\\ProductForm.tsx":"17","D:\\project\\Pricer\\Pricer\\client\\src\\components\\CustomSelect.tsx":"18","D:\\project\\Pricer\\Pricer\\client\\src\\routes\\protected\\CoreRoutes.tsx":"19","D:\\project\\Pricer\\Pricer\\client\\src\\components\\HOC\\ConfirmationModal.tsx":"20","D:\\project\\Pricer\\Pricer\\client\\src\\components\\HOC\\withConfirmation.tsx":"21","D:\\project\\Pricer\\Pricer\\client\\src\\redux\\productSlice.ts":"22","D:\\project\\Pricer\\Pricer\\client\\src\\redux\\ProductSlice.ts":"23","D:\\project\\Pricer\\Pricer\\client\\src\\redux\\AuthSlice.ts":"24"},{"size":425,"mtime":1608276046326,"results":"25","hashOfConfig":"26"},{"size":986,"mtime":1609291445848,"results":"27","hashOfConfig":"26"},{"size":2096,"mtime":1609292553164,"results":"28","hashOfConfig":"26"},{"size":865,"mtime":1609288911991,"results":"29","hashOfConfig":"26"},{"size":2546,"mtime":1609115829545,"results":"30","hashOfConfig":"26"},{"size":937,"mtime":1608441533897,"results":"31","hashOfConfig":"26"},{"size":194,"mtime":1608365311611,"results":"32","hashOfConfig":"26"},{"size":885,"mtime":1609288590169,"results":"33","hashOfConfig":"26"},{"size":489,"mtime":1608364462647,"results":"34","hashOfConfig":"26"},{"size":404,"mtime":1608432926356,"results":"35","hashOfConfig":"26"},{"size":855,"mtime":1608455040506,"results":"36","hashOfConfig":"26"},{"size":446,"mtime":1608438460310,"results":"37","hashOfConfig":"26"},{"size":470,"mtime":1609291524577,"results":"38","hashOfConfig":"26"},{"size":4235,"mtime":1609117166094,"results":"39","hashOfConfig":"26"},{"size":1888,"mtime":1609115721579,"results":"40","hashOfConfig":"26"},{"size":607,"mtime":1608458882429,"results":"41","hashOfConfig":"26"},{"size":4119,"mtime":1609115660506,"results":"42","hashOfConfig":"26"},{"size":2701,"mtime":1608502570910,"results":"43","hashOfConfig":"26"},{"size":383,"mtime":1608438297465,"results":"44","hashOfConfig":"26"},{"size":931,"mtime":1608507781045,"results":"45","hashOfConfig":"26"},{"size":1034,"mtime":1608507808397,"results":"46","hashOfConfig":"26"},{"size":1707,"mtime":1609289118208,"results":"47","hashOfConfig":"26"},{"size":1707,"mtime":1609289158149,"results":"48","hashOfConfig":"26"},{"size":1826,"mtime":1609291637645,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1pveznh",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"59"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"59"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\project\\Pricer\\Pricer\\client\\src\\reportWebVitals.ts",[],["105","106"],"D:\\project\\Pricer\\Pricer\\client\\src\\App.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\pages\\auth\\Login.tsx",["107","108","109","110"],"D:\\project\\Pricer\\Pricer\\client\\src\\index.tsx",[],["111","112"],"D:\\project\\Pricer\\Pricer\\client\\src\\pages\\dashboard\\Dashboard.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\components\\Navbar.tsx",["113"],"import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button, Nav, NavItem, NavLink } from 'reactstrap';\nimport { logout } from '../redux/actions/Auth';\n\nconst Navbar: React.FC = () => {\n\n  const dispatch = useDispatch();\n  return(\n\n    <>\n      <Nav className={'my-3'}>\n        <NavItem className={'mr-4'}>\n          <h4>Pricer</h4>\n        </NavItem>\n        <NavItem>\n          <NavLink href=\"/\">Dashboard</NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink href=\"/recipes\">Recipes</NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink href=\"/products\">Products</NavLink>\n        </NavItem>\n        <NavItem className={'ml-auto'}>\n          <Button outline color={'primary'} onClick={() => {\n            dispatch(logout());\n          }}>Sign Out</Button>\n        </NavItem>\n      </Nav>\n      <hr />\n    </>\n  )\n  ;\n};\n\nexport default Navbar;","D:\\project\\Pricer\\Pricer\\client\\src\\util\\LoggerService.ts",[],["114","115"],"D:\\project\\Pricer\\Pricer\\client\\src\\util\\AuthService.ts",[],"D:\\project\\Pricer\\Pricer\\client\\src\\aws-exports.js",[],"D:\\project\\Pricer\\Pricer\\client\\src\\routes\\PublicRoutes.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\routes\\routeMap.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\routes\\ProtectedRoutes.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\redux\\store.ts",[],"D:\\project\\Pricer\\Pricer\\client\\src\\pages\\product\\ProductIndex.tsx",["116"],"import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport {\n  Button,\n  Col,\n  Container,\n  FormGroup,\n  Input,\n  Label,\n  Pagination,\n  PaginationItem,\n  PaginationLink, Row,\n  Table,\n} from 'reactstrap';\nimport withInitialState, { initialStateProps } from '../../components/HOC/withInitialState';\n\ninterface ProductInfo {\n  id: string;\n  name: string;\n  quantity: string;\n  cost: string\n}\ninterface initialState {\n  count: number;\n  results: Array<ProductInfo>;\n}\n\nconst ProductIndex : React.FC<initialStateProps<initialState>> = ({initialState}) => {\n  \n  const history = useHistory();\n\n  return(\n    <Container>\n      <Row className={'mb-5'}>\n        <Col>\n          <h1 className={'display-4 mb-0'}>Products</h1>\n        </Col>\n        <Col className={'mt-auto col-md-auto'}>\n          <Link to={'/products/new'}>\n            <Button color={'primary'}  className={'ml-auto'}>Add New Product</Button>\n          </Link>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm={3}>\n          <FormGroup>\n            <Label>Price</Label>\n            <div className={'d-flex'}>\n              <Input type={'select'} className={'mr-2'}>\n                <option>Equal to</option>\n                <option>Less than</option>\n                <option>Greater than</option>\n              </Input>\n              <Input type={'number'} step=\"0.01\" max={200} min={0} className={'mr-2 w-50'}>30</Input>\n            </div>\n          </FormGroup>\n        </Col>\n        <Col sm={3} className={'ml-auto'}>\n          <FormGroup>\n            <Label>Search</Label>\n            <div>\n              <Input type={'text'} className={'mr-2'}/>\n            </div>\n          </FormGroup>\n        </Col>\n        <Col className={'col-md-auto mt-auto mb-3'}>\n          <Button color={'primary'} outline>Apply Filters</Button>\n        </Col>\n      </Row>\n      <Row>\n        <Table hover={true}>\n          <thead>\n            <tr>\n              <th>id #</th>\n              <th>Product Name</th>\n              <th>Quantity</th>\n              <th>Cost</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {initialState.results.map(({id, name, cost, quantity}, i) => (\n              <tr key={i} onClick={() => history.push('/')}>\n                <td>{id}</td>\n                <td>{name}</td>\n                <td>{quantity}</td>\n                <td>${cost}</td>\n                <td></td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </Row>\n      <hr/>\n      <Row>\n        <Col>Page 1 of 23</Col>\n        <Col className={'col-md-auto'}>\n          <Pagination aria-label=\"Page navigation example\">\n            <PaginationItem>\n              <PaginationLink first href=\"#\" />\n            </PaginationItem>\n            <PaginationItem>\n              <PaginationLink previous href=\"#\" />\n            </PaginationItem>\n            <PaginationItem>\n              <PaginationLink href=\"#\">\n          1\n              </PaginationLink>\n            </PaginationItem>\n            <PaginationItem>\n              <PaginationLink href=\"#\">\n          2\n              </PaginationLink>\n            </PaginationItem>\n            <PaginationItem>\n              <PaginationLink href=\"#\">\n          3\n              </PaginationLink>\n            </PaginationItem>\n            <PaginationItem>\n              <PaginationLink href=\"#\">\n          4\n              </PaginationLink>\n            </PaginationItem>\n            <PaginationItem>\n              <PaginationLink href=\"#\">\n          5\n              </PaginationLink>\n            </PaginationItem>\n            <PaginationItem>\n              <PaginationLink next href=\"#\" />\n            </PaginationItem>\n            <PaginationItem>\n              <PaginationLink last href=\"#\" />\n            </PaginationItem>\n          </Pagination>\n        </Col>\n      </Row>\n    </Container>);\n}\n  ;\n\nexport default withInitialState<{}, initialState>(ProductIndex,\n  () => ({\n    count: 10,\n    results: [\n      {\n        id: 'A0',\n        name: 'Peanut Butter',\n        quantity: '400g',\n        cost: '14.50',\n      },\n      {\n        id: 'A1',\n        name: 'Flour',\n        quantity: '1kg',\n        cost: '4.53',\n      },\n    ],\n  }));","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\product\\CreateProduct.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\routes\\protected\\ProductRoutes.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\pages\\product\\ProductForm.tsx",["117","118","119","120"],"import React from 'react';\nimport { Controller, FieldValues, useForm } from 'react-hook-form';\nimport { Button, Col, FormFeedback, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, Label, Row } from 'reactstrap';\nimport CustomSelect from '../../components/CustomSelect';\n\ninterface productFormProps {\n    onSubmit: (data: FieldValues) => void;\n    onCancel: () => void;\n    initialState?: productFormData;\n    units: Array<{value: string; label: string}>\n}\n\ninterface productFormData {\n    name: string;\n    cost: number;\n    quantity: number;\n    unit: string;\n    description?: string;\n    brand?: string;\n}\n\nconst ProductForm: React.FC<productFormProps> = ({onSubmit, onCancel, units}) => {\n\n  const { register, handleSubmit, errors, control } = useForm();\n\n  const initialState = {\n    name: 'peanut butter',\n    cost: 5.23,\n    quantity: 300,\n    unit: 'gram',\n  };\n\n  const preSubmit = (data : FieldValues) => {\n    Object.keys(data).forEach(key => {\n      if (data[key] === '' || data[key] == null) {\n        delete data[key];\n      }\n    });\n    onSubmit(data);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(preSubmit)}>\n      <FormGroup row>\n        <Col sm={6}>\n          <Label>Product Name</Label>\n          <Input\n            name=\"productName\"\n            placeholder=\"Enter a name for the product\"\n            innerRef={register({\n              required: true,\n            })}\n            invalid={errors.productName}\n          />\n          {errors.productName && <FormFeedback>Please enter a product name</FormFeedback>}\n        </Col>\n      </FormGroup>\n      <FormGroup row>\n        <Col sm={2}>\n          <Label>Cost</Label>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n              <InputGroupText>$</InputGroupText>\n            </InputGroupAddon>\n            <Input\n              name={'productPrice'}\n              type={'number'}\n              className={'rounded-right'}\n              placeholder={'0.00'}\n              min={0}\n              step={0.01}\n              innerRef={register({\n                required: true,\n                min: 0,\n              })}\n              invalid={errors.productPrice}\n            />\n            {errors.productPrice && <FormFeedback>Please enter a product price</FormFeedback>}\n          </InputGroup>\n        </Col>\n      </FormGroup>\n      <FormGroup row>\n        <Col sm={5}>\n          <Label>Quantity</Label>\n          <InputGroup>\n\n            <Input\n              name={'productQuantity'}\n              type={'number'}\n              className={'rounded'}\n              min={0}\n              innerRef={register({\n                required: true,\n                min: 0,\n              })}\n              invalid={errors.productQuantity}\n            />\n              \n            <Controller\n              className={'w-75 ml-3'}\n              name=\"productUnit\"\n              control={control}\n              options={units}\n              as={CustomSelect}\n              invalid={errors.productUnit}\n              rules={{ required: true }}\n              placeholder={'Select a unit'}\n            />\n\n            {errors.productQuantity && <FormFeedback>Please enter a valid quantity</FormFeedback>}\n          </InputGroup>\n        </Col>\n      </FormGroup>\n      <hr/>\n      <FormGroup row>\n        <Col sm={4}>\n          <Label>Brand <span className={'text-muted ml-2'}><small>Optional</small></span></Label>\n          <Input\n            name={'productBrand'}\n            innerRef={register}\n          />\n        </Col>\n      </FormGroup>\n      <FormGroup row>\n        <Col sm={6}>\n          <Label>Description <span className={'text-muted ml-2'}><small>Optional</small></span></Label>\n          <Input\n            name={'productDescription'}\n            type={'textarea'}\n            innerRef={register}\n          />\n        </Col>\n      </FormGroup>\n      <hr/>\n      <FormGroup>\n        <Button type=\"submit\" color={'primary'}>Save</Button>\n        <Button onClick={onCancel} color={'primary'} className={'ml-4'} outline>Cancel</Button>\n      </FormGroup>\n    </form>\n  );\n};\n\nexport default ProductForm;","D:\\project\\Pricer\\Pricer\\client\\src\\components\\CustomSelect.tsx",["121"],"import React from 'react';\nimport Select, { Props } from 'react-select';\n\nconst white = '#ffffff';\nconst bsBorderBlue = '#66afe9';\nconst bsBorderGrey = 'rgb(206, 212, 218)';\nconst bsBoxShadowBlue = 'inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba(102,175,233,.6);';\nconst bsBoxShadowGrey = 'inset 0 1px 1px rgba(0,0,0,.075);';\nconst bsBackgroundOption = '#f8f9fa';\nconst bsBackgroundOptionSelected = '#eeeeee';\nconst bsControlTextColor = '#555555';\nconst bsBorderError = '#dc3545';\nconst bsBoxShadowError = 'inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px #dc3545;';\n\n\ninterface customSelectProps extends Props {\n    invalid: boolean;\n}\n\nconst errStyles = {\n  PaddingRight: 'calc(1.5em + .75rem)',\n  background: 'url(\"data:image/svg+xml,%3csvg xmlns=\\'http://www.w3.org/2000/svg\\' width=\\'12\\' height=\\'12\\' fill=\\'none\\' stroke=\\'%23dc3545\\' viewBox=\\'0 0 12 12\\'%3e%3ccircle cx=\\'6\\' cy=\\'6\\' r=\\'4.5\\'/%3e%3cpath stroke-linejoin=\\'round\\' d=\\'M5.8 3.6h.4L6 6.5z\\'/%3e%3ccircle cx=\\'6\\' cy=\\'8.2\\' r=\\'.6\\' fill=\\'%23dc3545\\' stroke=\\'none\\'/%3e%3c/svg%3e\")',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition:'right calc(.375em + .1875rem) center',\n  backgroundSize:' calc(.75em + .375rem) calc(.75em + .375rem)',\n};\n\nconst CustomSelect : React.FC<customSelectProps> = ({invalid, ...rest}) => {\n\n  const styles = {\n    control: (base: any, state: { selectProps: { menuIsOpen?: any; }; }) => ({\n      ...base,\n      borderRadius: '.25rem',\n      backgroundColor: white,\n      borderColor: invalid?\n        bsBorderError\n        :\n        (state.selectProps.menuIsOpen ? bsBorderBlue : bsBorderGrey),\n      boxShadow: state.selectProps.menuIsOpen ?\n        (invalid? bsBoxShadowError : bsBoxShadowBlue)\n        :\n        bsBoxShadowGrey,\n      ':hover': {\n        borderColor: invalid?\n          bsBorderError\n          :\n          (state.selectProps.menuIsOpen ? bsBorderBlue : bsBorderGrey),\n        boxShadow: state.selectProps.menuIsOpen ?\n          (invalid? bsBoxShadowError : bsBoxShadowBlue)\n          :\n          bsBoxShadowGrey,\n      },\n    }),\n\n    indicatorSeparator: (base:any) => ({\n      ...base,\n      backgroundColor: invalid ? bsBorderError : bsBorderGrey,\n    }),\n  \n    option: (base: any, state: { isSelected: any; isFocused: any; }) => ({\n      ...base,\n      color: bsControlTextColor,\n      backgroundColor: state.isSelected\n        ? bsBackgroundOptionSelected\n        : state.isFocused ? bsBackgroundOption : white,\n    }),\n\n    valueContainer: (base: any) => ({\n      ...base,\n      ...(invalid ? errStyles : {}),\n    }),\n  };\n\n  return(\n    <>\n      <Select\n        styles={styles}\n        isClearable\n        { ...rest}\n      />\n    </>\n  );\n};\nexport default CustomSelect;","D:\\project\\Pricer\\Pricer\\client\\src\\routes\\protected\\CoreRoutes.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\components\\HOC\\ConfirmationModal.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\components\\HOC\\withConfirmation.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\redux\\productSlice.ts",["122"],"D:\\project\\Pricer\\Pricer\\client\\src\\redux\\ProductSlice.ts",["123"],"D:\\project\\Pricer\\Pricer\\client\\src\\redux\\AuthSlice.ts",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":1,"column":10,"nodeType":"130","messageId":"131","endLine":1,"endColumn":14},{"ruleId":"128","severity":1,"message":"132","line":2,"column":17,"nodeType":"130","messageId":"131","endLine":2,"endColumn":25},{"ruleId":"128","severity":1,"message":"133","line":4,"column":10,"nodeType":"130","messageId":"131","endLine":4,"endColumn":21},{"ruleId":"128","severity":1,"message":"134","line":25,"column":35,"nodeType":"130","messageId":"131","endLine":25,"endColumn":41},{"ruleId":"124","replacedBy":"135"},{"ruleId":"126","replacedBy":"136"},{"ruleId":"128","severity":1,"message":"137","line":3,"column":10,"nodeType":"130","messageId":"131","endLine":3,"endColumn":14},{"ruleId":"124","replacedBy":"138"},{"ruleId":"126","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":54,"column":1,"nodeType":"142","messageId":"143","endLine":54,"endColumn":102},{"ruleId":"140","severity":1,"message":"144","line":3,"column":1,"nodeType":"142","messageId":"143","endLine":3,"endColumn":131},{"ruleId":"128","severity":1,"message":"145","line":3,"column":107,"nodeType":"130","messageId":"131","endLine":3,"endColumn":110},{"ruleId":"128","severity":1,"message":"146","line":26,"column":9,"nodeType":"130","messageId":"131","endLine":26,"endColumn":21},{"ruleId":"140","severity":1,"message":"147","line":126,"column":1,"nodeType":"142","messageId":"143","endLine":126,"endColumn":104},{"ruleId":"140","severity":1,"message":"148","line":22,"column":1,"nodeType":"142","messageId":"143","endLine":22,"endColumn":364},{"ruleId":"128","severity":1,"message":"149","line":72,"column":9,"nodeType":"130","messageId":"131","endLine":72,"endColumn":16},{"ruleId":"128","severity":1,"message":"149","line":72,"column":9,"nodeType":"130","messageId":"131","endLine":72,"endColumn":16},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"@typescript-eslint/no-unused-vars","'Auth' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useDispatch' is defined but never used.","'errors' is assigned a value but never used.",["150"],["151"],"'Link' is defined but never used.",["150"],["151"],"max-len","This line has a length of 101. Maximum allowed is 100.","Program","max","This line has a length of 130. Maximum allowed is 100.","'Row' is defined but never used.","'initialState' is assigned a value but never used.","This line has a length of 103. Maximum allowed is 100.","This line has a length of 363. Maximum allowed is 100.","'actions' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]