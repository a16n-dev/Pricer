[{"D:\\project\\Pricer\\Pricer\\client\\src\\reportWebVitals.ts":"1","D:\\project\\Pricer\\Pricer\\client\\src\\App.tsx":"2","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\auth\\Login.tsx":"3","D:\\project\\Pricer\\Pricer\\client\\src\\index.tsx":"4","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\dashboard\\Dashboard.tsx":"5","D:\\project\\Pricer\\Pricer\\client\\src\\components\\Navbar.tsx":"6","D:\\project\\Pricer\\Pricer\\client\\src\\util\\LoggerService.ts":"7","D:\\project\\Pricer\\Pricer\\client\\src\\util\\AuthService.ts":"8","D:\\project\\Pricer\\Pricer\\client\\src\\aws-exports.js":"9","D:\\project\\Pricer\\Pricer\\client\\src\\routes\\PublicRoutes.tsx":"10","D:\\project\\Pricer\\Pricer\\client\\src\\routes\\routeMap.tsx":"11","D:\\project\\Pricer\\Pricer\\client\\src\\routes\\ProtectedRoutes.tsx":"12","D:\\project\\Pricer\\Pricer\\client\\src\\redux\\store.ts":"13","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\product\\ProductIndex.tsx":"14","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\product\\CreateProduct.tsx":"15","D:\\project\\Pricer\\Pricer\\client\\src\\routes\\protected\\ProductRoutes.tsx":"16","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\product\\ProductForm.tsx":"17","D:\\project\\Pricer\\Pricer\\client\\src\\components\\CustomSelect.tsx":"18","D:\\project\\Pricer\\Pricer\\client\\src\\routes\\protected\\CoreRoutes.tsx":"19","D:\\project\\Pricer\\Pricer\\client\\src\\components\\HOC\\ConfirmationModal.tsx":"20","D:\\project\\Pricer\\Pricer\\client\\src\\components\\HOC\\withConfirmation.tsx":"21","D:\\project\\Pricer\\Pricer\\client\\src\\components\\HOC\\withInitialState.tsx":"22","D:\\project\\Pricer\\Pricer\\client\\src\\components\\HOC\\withReduxState.tsx":"23","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\product\\EditProduct.tsx":"24","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\unit\\UnitIndex.tsx":"25","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\unit\\UnitForm.tsx":"26","D:\\project\\Pricer\\Pricer\\client\\src\\api\\client.ts":"27","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\common\\LoadingPage.tsx":"28","D:\\project\\Pricer\\Pricer\\client\\src\\routes\\protected\\UtilRoutes.tsx":"29","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\common\\NotFound.tsx":"30","D:\\project\\Pricer\\Pricer\\client\\src\\redux\\product\\ProductSlice.ts":"31","D:\\project\\Pricer\\Pricer\\client\\src\\redux\\unit\\UnitSlice.ts":"32","D:\\project\\Pricer\\Pricer\\client\\src\\redux\\unit\\updateUnit.ts":"33","D:\\project\\Pricer\\Pricer\\client\\src\\redux\\auth\\AuthSlice.ts":"34","D:\\project\\Pricer\\Pricer\\client\\src\\redux\\auth\\hydrateAuth.ts":"35","D:\\project\\Pricer\\Pricer\\client\\src\\redux\\unit\\deleteUnit.ts":"36","D:\\project\\Pricer\\Pricer\\client\\src\\redux\\auth\\logout.ts":"37","D:\\project\\Pricer\\Pricer\\client\\src\\redux\\auth\\login.ts":"38","D:\\project\\Pricer\\Pricer\\client\\src\\components\\ContainedContainer.tsx":"39","D:\\project\\Pricer\\Pricer\\client\\src\\components\\ScrollContainer.tsx":"40","D:\\project\\Pricer\\Pricer\\client\\src\\redux\\product\\createProduct.ts":"41","D:\\project\\Pricer\\Pricer\\client\\src\\routes\\protected\\UnitRoutes.tsx":"42","D:\\project\\Pricer\\Pricer\\client\\src\\redux\\unit\\createUnit.ts":"43","D:\\project\\Pricer\\Pricer\\client\\src\\redux\\unit\\fetchUnits.ts":"44","D:\\project\\Pricer\\Pricer\\client\\src\\redux\\product\\fetchProducts.ts":"45","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\recipe\\RecipeModal.tsx":"46","D:\\project\\Pricer\\Pricer\\client\\src\\components\\SelectTable.tsx":"47","D:\\project\\Pricer\\Pricer\\client\\src\\components\\PagedTable.tsx":"48","D:\\project\\Pricer\\Pricer\\client\\src\\redux\\recipe\\RecipeSlice.ts":"49","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\recipe\\RecipeIndex.tsx":"50","D:\\project\\Pricer\\Pricer\\client\\src\\routes\\protected\\RecipeRoutes.tsx":"51","D:\\project\\Pricer\\Pricer\\client\\src\\hooks\\useUserData.ts":"52","D:\\project\\Pricer\\Pricer\\client\\src\\redux\\recipe\\fetchRecipes.ts":"53","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\recipe\\RecipeDetail\\RecipeDetailForm.tsx":"54","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\recipe\\RecipeDetail\\RecipeDetail.tsx":"55","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\recipe\\RecipeDetail\\AddIngredientsModal.tsx":"56","D:\\project\\Pricer\\Pricer\\client\\src\\redux\\recipe\\addRecipeIngredients.ts":"57","D:\\project\\Pricer\\Pricer\\client\\src\\components\\Dot.tsx":"58","D:\\project\\Pricer\\Pricer\\client\\src\\redux\\recipe\\CreateRecipe.ts":"59","D:\\project\\Pricer\\Pricer\\client\\src\\util\\relativeDateString.ts":"60","D:\\project\\Pricer\\Pricer\\client\\src\\redux\\recipe\\updateRecipeIngredients.ts":"61","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\recipe\\RecipeDetail\\RecipeAnalysisBox.tsx":"62","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\recipe\\RecipeAnalysisOverview.tsx":"63","D:\\project\\Pricer\\Pricer\\client\\src\\redux\\recipe\\saveAnalysis.ts":"64","D:\\project\\Pricer\\Pricer\\client\\src\\redux\\recipe\\deleteRecipe.ts":"65"},{"size":425,"mtime":1608276046326,"results":"66","hashOfConfig":"67"},{"size":1330,"mtime":1609839341506,"results":"68","hashOfConfig":"67"},{"size":2028,"mtime":1609725127321,"results":"69","hashOfConfig":"67"},{"size":865,"mtime":1609626097052,"results":"70","hashOfConfig":"67"},{"size":4202,"mtime":1609839962003,"results":"71","hashOfConfig":"67"},{"size":1067,"mtime":1609726092122,"results":"72","hashOfConfig":"67"},{"size":194,"mtime":1608365311611,"results":"73","hashOfConfig":"67"},{"size":885,"mtime":1609288590169,"results":"74","hashOfConfig":"67"},{"size":489,"mtime":1608364462647,"results":"75","hashOfConfig":"67"},{"size":404,"mtime":1608432926356,"results":"76","hashOfConfig":"67"},{"size":919,"mtime":1609627505079,"results":"77","hashOfConfig":"67"},{"size":832,"mtime":1609731526395,"results":"78","hashOfConfig":"67"},{"size":621,"mtime":1609752116832,"results":"79","hashOfConfig":"67"},{"size":2121,"mtime":1609751923543,"results":"80","hashOfConfig":"67"},{"size":2382,"mtime":1610012464109,"results":"81","hashOfConfig":"67"},{"size":793,"mtime":1609493545340,"results":"82","hashOfConfig":"67"},{"size":4262,"mtime":1609718746476,"results":"83","hashOfConfig":"67"},{"size":2792,"mtime":1609750428453,"results":"84","hashOfConfig":"67"},{"size":383,"mtime":1608438297465,"results":"85","hashOfConfig":"67"},{"size":931,"mtime":1608507781045,"results":"86","hashOfConfig":"67"},{"size":1152,"mtime":1609114970287,"results":"87","hashOfConfig":"67"},{"size":519,"mtime":1609475096462,"results":"88","hashOfConfig":"67"},{"size":845,"mtime":1609623824703,"results":"89","hashOfConfig":"67"},{"size":1652,"mtime":1610012563116,"results":"90","hashOfConfig":"67"},{"size":3071,"mtime":1609739463713,"results":"91","hashOfConfig":"67"},{"size":6882,"mtime":1610232270820,"results":"92","hashOfConfig":"67"},{"size":3710,"mtime":1610234865543,"results":"93","hashOfConfig":"67"},{"size":337,"mtime":1609628231402,"results":"94","hashOfConfig":"67"},{"size":320,"mtime":1609628246460,"results":"95","hashOfConfig":"67"},{"size":581,"mtime":1609495989482,"results":"96","hashOfConfig":"67"},{"size":864,"mtime":1610012241470,"results":"97","hashOfConfig":"67"},{"size":969,"mtime":1609727681397,"results":"98","hashOfConfig":"67"},{"size":1917,"mtime":1609727733338,"results":"99","hashOfConfig":"67"},{"size":637,"mtime":1609727526772,"results":"100","hashOfConfig":"67"},{"size":1020,"mtime":1609729289876,"results":"101","hashOfConfig":"67"},{"size":893,"mtime":1609840123059,"results":"102","hashOfConfig":"67"},{"size":667,"mtime":1609729887562,"results":"103","hashOfConfig":"67"},{"size":739,"mtime":1610232292810,"results":"104","hashOfConfig":"67"},{"size":571,"mtime":1609725121259,"results":"105","hashOfConfig":"67"},{"size":245,"mtime":1609724872126,"results":"106","hashOfConfig":"67"},{"size":947,"mtime":1609726934973,"results":"107","hashOfConfig":"67"},{"size":394,"mtime":1609569093446,"results":"108","hashOfConfig":"67"},{"size":892,"mtime":1609727730547,"results":"109","hashOfConfig":"67"},{"size":694,"mtime":1609727714767,"results":"110","hashOfConfig":"67"},{"size":982,"mtime":1610012313549,"results":"111","hashOfConfig":"67"},{"size":1869,"mtime":1609838901320,"results":"112","hashOfConfig":"67"},{"size":1014,"mtime":1609919678874,"results":"113","hashOfConfig":"67"},{"size":3202,"mtime":1610238272006,"results":"114","hashOfConfig":"67"},{"size":2123,"mtime":1610245941555,"results":"115","hashOfConfig":"67"},{"size":3020,"mtime":1610235463035,"results":"116","hashOfConfig":"67"},{"size":851,"mtime":1610233722349,"results":"117","hashOfConfig":"67"},{"size":438,"mtime":1609917083828,"results":"118","hashOfConfig":"67"},{"size":966,"mtime":1610012327264,"results":"119","hashOfConfig":"67"},{"size":4506,"mtime":1610226894371,"results":"120","hashOfConfig":"67"},{"size":5559,"mtime":1610239770433,"results":"121","hashOfConfig":"67"},{"size":2121,"mtime":1610228621155,"results":"122","hashOfConfig":"67"},{"size":893,"mtime":1610228352085,"results":"123","hashOfConfig":"67"},{"size":232,"mtime":1609920508389,"results":"124","hashOfConfig":"67"},{"size":926,"mtime":1609831556700,"results":"125","hashOfConfig":"67"},{"size":277,"mtime":1610227955851,"results":"126","hashOfConfig":"67"},{"size":961,"mtime":1610229130826,"results":"127","hashOfConfig":"67"},{"size":1948,"mtime":1610238897609,"results":"128","hashOfConfig":"67"},{"size":4962,"mtime":1610239700194,"results":"129","hashOfConfig":"67"},{"size":787,"mtime":1610234875464,"results":"130","hashOfConfig":"67"},{"size":832,"mtime":1610245908300,"results":"131","hashOfConfig":"67"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},"1pveznh",{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"161"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"147"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"134"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"166"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\project\\Pricer\\Pricer\\client\\src\\reportWebVitals.ts",[],["283","284"],"D:\\project\\Pricer\\Pricer\\client\\src\\App.tsx",["285","286","287"],"D:\\project\\Pricer\\Pricer\\client\\src\\pages\\auth\\Login.tsx",["288"],"D:\\project\\Pricer\\Pricer\\client\\src\\index.tsx",[],["289","290"],"D:\\project\\Pricer\\Pricer\\client\\src\\pages\\dashboard\\Dashboard.tsx",["291","292"],"import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Alert, Button, Card, CardBody, Col, Container, Row, Table } from 'reactstrap';\nimport { ApiClient } from '../../api/client';\nimport useUserData from '../../hooks/useUserData';\nimport { RootState } from '../../redux/store';\nimport CreateRecipeModal from '../recipe/RecipeModal';\n\n\nconst Dashboard: React.FC = () => {\n  \n  const [ recipeModal, setRecipeModal ] = useState<boolean>(false);\n  const fetchData = useUserData();\n\n  const selectorFunction = (state: RootState) => state;\n\n  const state = useSelector(selectorFunction);\n\n  return(\n    <>\n      <Container>\n        <Row>\n          <h1 className={'display-4'}>Dashboard</h1>\n        </Row>\n        {process.env.NODE_ENV === 'development' && <>\n          <hr/>\n          <h2>\n          Dev tools\n          </h2>\n          \n          <Button onClick={async () => {\n            await ApiClient.seedDB();\n            fetchData();\n          }}\n          color={'success'}\n          >Seed database</Button>\n          <br/>\n          <span>Recipes: {state.recipes.count}</span><br/>\n          <span>Products: {state.products.count}</span><br/>\n          <span>Units: {state.units.count}</span><br/>\n          <span>Authentication Token:</span><br/>\n          <Alert color=\"dark\" fade={false}>{state.auth.token}</Alert>\n          <hr/>\n        </>}\n        <Row className={'mt-4'}>\n          <h2>Recipes <span className={'ml-3 text-primary'}>23</span></h2>\n        </Row>\n        <Row className={'mt-2'}>\n          <Link to={'/recipes'}>\n            <Button color={'primary'}>View all Recipes</Button>\n          </Link>\n          <Button color={'primary'} onClick={() => setRecipeModal(true)} outline className={'ml-4'}>Add new Recipe</Button>\n        </Row>\n        <Row className={'mt-2'}>\n          <Card className={'w-100'}>\n            <CardBody>\n              <Table className={'mb-0'}>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>First Name</th>\n                    <th>Last Name</th>\n                    <th>Username</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">1</th>\n                    <td>Mark</td>\n                    <td>Otto</td>\n                    <td>@mdo</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">2</th>\n                    <td>Jacob</td>\n                    <td>Thornton</td>\n                    <td>@fat</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Row>\n        <Row className={'mt-5'}>\n          <h2>Products <span className={'ml-3 text-primary'}>304</span></h2>\n        </Row>\n        <Row className={'mt-2'}>\n          <Link to={'/products'}>\n            <Button color={'primary'}>View all Products</Button>\n          </Link>\n          <Link to={'/products/new'}>\n            <Button color={'primary'} outline className={'ml-4'}>Add new Product</Button>\n          </Link>\n        </Row>\n        <Row className={'mt-2'}>\n          <Card className={'w-100'}>\n            <CardBody>\n              <Table className={'mb-0'}>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>First Name</th>\n                    <th>Last Name</th>\n                    <th>Username</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">1</th>\n                    <td>Mark</td>\n                    <td>Otto</td>\n                    <td>@mdo</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">2</th>\n                    <td>Jacob</td>\n                    <td>Thornton</td>\n                    <td>@fat</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Row>\n      </Container>\n      <CreateRecipeModal modal={recipeModal} setModal={setRecipeModal}/>\n    </>\n  );\n};\n\nexport default Dashboard;","D:\\project\\Pricer\\Pricer\\client\\src\\components\\Navbar.tsx",[],["293","294"],"D:\\project\\Pricer\\Pricer\\client\\src\\util\\LoggerService.ts",[],["295","296"],"D:\\project\\Pricer\\Pricer\\client\\src\\util\\AuthService.ts",[],"D:\\project\\Pricer\\Pricer\\client\\src\\aws-exports.js",[],["297","298"],"D:\\project\\Pricer\\Pricer\\client\\src\\routes\\PublicRoutes.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\routes\\routeMap.tsx",["299"],"import React, { Suspense } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { Spinner } from 'reactstrap';\nimport LoadingPage from '../pages/common/LoadingPage';\n\nexport interface routeMap {\n    Fallback?: React.ComponentType;\n    routes?: Array<route>;\n    redirects?: Array<redirect>;\n}\n\ninterface route {\n    path: string;\n    exact?: boolean;\n    Component: React.ComponentType;\n}\n\ninterface redirect {\n    from: string;\n    to: string;\n}\n\nexport const renderRoutes = ({\n  Fallback = () => <LoadingPage/>, routes, redirects,\n}: routeMap) => () => (\n  <Suspense fallback={<Fallback/>}>\n    <Switch>\n      {routes?.map(({path, Component, exact}, i) => (\n        <Route path={path} key={i} exact={exact}>\n          <Component />\n        </Route>\n      ))}\n      {redirects?.map(({from, to}, i) => (\n        <Redirect from={from} to={to} key={i}/>\n      ))}\n    </Switch>\n  </Suspense>);",["300","301"],"D:\\project\\Pricer\\Pricer\\client\\src\\routes\\ProtectedRoutes.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\redux\\store.ts",[],["302","303"],"D:\\project\\Pricer\\Pricer\\client\\src\\pages\\product\\ProductIndex.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\pages\\product\\CreateProduct.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\routes\\protected\\ProductRoutes.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\pages\\product\\ProductForm.tsx",["304","305"],"import React from 'react';\nimport { Controller, FieldValues, useForm } from 'react-hook-form';\nimport { Button, Col, FormFeedback, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, Label } from 'reactstrap';\nimport CustomSelect from '../../components/CustomSelect';\nimport { ProductData } from '../../models/Product';\n\ninterface productFormProps {\n    onSubmit: (data: FieldValues) => void;\n    onCancel: () => void;\n    initialState?: ProductData;\n    units: Array<{value: string; label: string}>\n}\n\nconst ProductForm: React.FC<productFormProps> = ({onSubmit, onCancel, units, initialState}) => {\n\n  const { register, handleSubmit, errors, control } = useForm({\n    defaultValues: {\n      productName: initialState?.name,\n      productPrice: initialState?.cost,\n      productQuantity: initialState?.quantity,\n      productUnit: units.find(u => u.value === initialState?.unitId),\n      productBrand: initialState?.brand,\n      productDescription: initialState?.description,\n    },\n  });\n\n  const preSubmit = (data : FieldValues) => {\n    Object.keys(data).forEach(key => {\n      if (data[key] === '' || data[key] == null) {\n        delete data[key];\n      }\n    });\n    onSubmit(data);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(preSubmit)}>\n      <FormGroup row>\n        <Col sm={6}>\n          <Label>Product Name</Label>\n          <Input\n            name=\"productName\"\n            placeholder=\"Enter a name for the product\"\n            innerRef={register({\n              required: true,\n            })}\n            invalid={Boolean(errors.productName)}\n          />\n          {errors.productName && <FormFeedback>Please enter a product name</FormFeedback>}\n        </Col>\n      </FormGroup>\n      <FormGroup row>\n        <Col sm={2}>\n          <Label>Cost</Label>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n              <InputGroupText>$</InputGroupText>\n            </InputGroupAddon>\n            <Input\n              name={'productPrice'}\n              type={'number'}\n              className={'rounded-right'}\n              placeholder={'0.00'}\n              min={0}\n              step={0.01}\n              innerRef={register({\n                required: true,\n                min: 0,\n              })}\n              invalid={Boolean(errors.productPrice)}\n            />\n            {errors.productPrice && <FormFeedback>Please enter a product price</FormFeedback>}\n          </InputGroup>\n        </Col>\n      </FormGroup>\n      <FormGroup row>\n        <Col sm={5}>\n          <Label>Quantity</Label>\n          <InputGroup>\n\n            <Input\n              name={'productQuantity'}\n              type={'number'}\n              className={'rounded'}\n              min={0}\n              innerRef={register({\n                required: true,\n                min: 0,\n              })}\n              invalid={Boolean(errors.productQuantity)}\n            />\n              \n            <Controller\n              className={'w-75 ml-3'}\n              name=\"productUnit\"\n              control={control}\n              options={units}\n              as={CustomSelect}\n              invalid={errors.productUnit}\n              rules={{ required: true }}\n              placeholder={'Select a unit'}\n            />\n\n            {errors.productQuantity && <FormFeedback>Please enter a valid quantity</FormFeedback>}\n          </InputGroup>\n        </Col>\n      </FormGroup>\n      <hr/>\n      <FormGroup row>\n        <Col sm={4}>\n          <Label>Brand <span className={'text-muted ml-2'}><small>Optional</small></span></Label>\n          <Input\n            name={'productBrand'}\n            innerRef={register}\n          />\n        </Col>\n      </FormGroup>\n      <FormGroup row>\n        <Col sm={6}>\n          <Label>Description <span className={'text-muted ml-2'}><small>Optional</small></span></Label>\n          <Input\n            name={'productDescription'}\n            type={'textarea'}\n            innerRef={register}\n          />\n        </Col>\n      </FormGroup>\n      <hr/>\n      <FormGroup>\n        <Button type=\"submit\" color={'primary'}>Save</Button>\n        <Button onClick={onCancel} color={'primary'} className={'ml-4'} outline>Cancel</Button>\n      </FormGroup>\n    </form>\n  );\n};\n\nexport default ProductForm;","D:\\project\\Pricer\\Pricer\\client\\src\\components\\CustomSelect.tsx",["306"],"D:\\project\\Pricer\\Pricer\\client\\src\\routes\\protected\\CoreRoutes.tsx",[],["307","308"],"D:\\project\\Pricer\\Pricer\\client\\src\\components\\HOC\\ConfirmationModal.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\components\\HOC\\withConfirmation.tsx",[],["309","310"],"D:\\project\\Pricer\\Pricer\\client\\src\\components\\HOC\\withInitialState.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\components\\HOC\\withReduxState.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\pages\\product\\EditProduct.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\pages\\unit\\UnitIndex.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\pages\\unit\\UnitForm.tsx",["311","312","313","314","315","316"],"import React, { useEffect } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport { Button, Card, CardBody, CardHeader, Col, CustomInput, FormFeedback, FormGroup, Input, InputGroup, Label, Row } from 'reactstrap';\nimport CustomSelect from '../../components/CustomSelect';\nimport { Unit, UnitData } from '../../models/Unit';\n\ninterface UnitFormProps {\n    existingUnit?: Unit;\n    onSubmit?: (data: UnitData) => void;\n    units: Array<Unit>;\n    onDelete: () => void;\n    disableForm: boolean;\n}\n\nexport interface UnitFormFields {\n    UnitName: string;\n    UnitSymbol: string;\n    UnitBase: '0' | '1';\n    UnitRelativeUnit: {\n        label:string;\n        value: Unit;\n    };\n    UnitRelativeQuantity: string;\n}\n\nconst BASE_UNIT: unitOption = {\n  label: 'BASE',\n  value: {\n    userId: '1',\n    id: '0',\n    name: 'BASE',\n    symbol: '',\n    base: 0,\n    quantity: 1,\n    dateCreated: Date.now(),\n    dateUpdated: Date.now(),\n  },\n};\n\ninterface unitOption {\n    label: string;\n    value: Unit;\n    isDisabled?: boolean;\n}\n\nconst UnitForm: React.FC<UnitFormProps> = ({existingUnit, onSubmit, units, onDelete, disableForm}) => {\n\n  const toUnitOption = (u: Unit): unitOption => ({\n    label: u.name,\n    value: u,\n    isDisabled: Boolean(u.relativeUnitId) && (u.relativeUnitId === existingUnit?.id),\n  });\n\n  const refUnit = units.find(e => e.id === existingUnit?.relativeUnitId);\n\n  const defaultValues: any = {\n    UnitName: existingUnit?.name,\n    UnitSymbol: existingUnit?.symbol,\n    UnitBase: existingUnit?.base.toString() as any,\n    UnitRelativeUnit: existingUnit?.relativeUnitId ?\n      refUnit ? toUnitOption(refUnit) : undefined\n      : BASE_UNIT,\n    UnitRelativeQuantity: existingUnit?.relativeUnitId ?\n      existingUnit?.relativeQuantity?.toString()\n      : existingUnit?.quantity.toString(),\n  };\n\n  const { register, handleSubmit, errors, control, watch, reset } = useForm<UnitFormFields>({\n    defaultValues,\n  });\n\n  useEffect(() => {\n    reset(defaultValues);\n  }, [ existingUnit ]);\n\n  const preSubmit = (data : UnitFormFields) => {\n\n    const res: UnitData = {\n      name: data.UnitName,\n      symbol: data.UnitSymbol,\n      base: Number(data.UnitBase) as 0 | 1,\n      quantity: 0,\n    };\n\n    const unit = data.UnitRelativeUnit;\n    if(unit.value.id === '0'){\n      res.quantity = Number(data.UnitRelativeQuantity);\n    } else {\n      res.relativeQuantity = Number(data.UnitRelativeQuantity);\n      res.relativeUnitId =  unit.value.id;\n      res.quantity = parseFloat((Number(data.UnitRelativeQuantity) * unit.value.quantity).toFixed(3));\n    }\n\n    if(onSubmit){\n      onSubmit(res);\n    }\n  };\n\n  const UnitBase = watch('UnitBase');\n  const UnitName = watch('UnitName');\n  const UnitRelativeUnit = watch('UnitRelativeUnit')?.value;\n  const UnitRelativeQuantity = watch('UnitRelativeQuantity');\n\n  const dropdownOptions: Array<unitOption> = units\n    .filter(u => u.base.toString() === UnitBase)\n    .map(u => toUnitOption(u));\n\n  dropdownOptions.push(BASE_UNIT);\n\n  return (\n    <Card>\n      <CardHeader>{existingUnit ? `Editing ${existingUnit.name}` : 'Create new unit'}</CardHeader>\n      <CardBody>\n        <form onSubmit={handleSubmit(preSubmit)}>\n          <FormGroup row>\n            <Col>\n              <Label>Unit Name</Label>\n              <Input\n                name=\"UnitName\"\n                placeholder=\"Enter a name for the unit\"\n                innerRef={register({\n                  required: true,\n                })}\n                invalid={Boolean(errors.UnitName)}\n                disabled={disableForm}\n              />\n              {errors.UnitName && <FormFeedback>Please enter a product name</FormFeedback>}\n            </Col>\n          </FormGroup>\n          <FormGroup row>\n            <Col sm={6}>\n              <Label>Symbol</Label>\n              <Input\n                name=\"UnitSymbol\"\n                placeholder=\"Enter a symbol\"\n                innerRef={register({\n                  required: true,\n                })}\n                invalid={Boolean(errors.UnitSymbol)}\n                disabled={disableForm}\n              />\n              {errors.UnitSymbol && <FormFeedback>Please enter a symbol</FormFeedback>}\n            </Col>\n          </FormGroup>\n          <FormGroup row>\n            <Col>\n              <Label>Base</Label>\n              <Row>\n                <Col sm={'auto'}>\n                  <CustomInput\n                    type=\"radio\"\n                    id=\"exampleCustomRadio\"\n                    name=\"UnitBase\"\n                    label=\"Weight\"\n                    innerRef={register}\n                    value={'0'}\n                    disabled={disableForm}\n                  />\n                </Col>\n                <Col sm>\n                  <CustomInput\n                    type=\"radio\"\n                    id=\"exampleCustomRadio2\"\n                    name=\"UnitBase\"\n                    label=\"Volume\"\n                    innerRef={register}\n                    value={'1'}\n                    disabled={disableForm}\n                  />\n                </Col>\n              </Row>\n              {errors.UnitSymbol && <FormFeedback>Please enter a symbol</FormFeedback>}\n            </Col>\n          </FormGroup>\n          <hr/>\n          <FormGroup row>\n            <Col>\n              <Label>Quantity</Label>\n              <InputGroup>\n\n                <Input\n                  name={'UnitRelativeQuantity'}\n                  min={0}\n                  innerRef={register({\n                    required: true,\n                    min: 0,\n                  })}\n                  invalid={Boolean(errors.UnitRelativeQuantity)}\n                  disabled={disableForm}\n                />\n              \n                <Controller\n                  className={'w-50 ml-3'}\n                  name=\"UnitRelativeUnit\"\n                  control={control}\n                  options={dropdownOptions}\n                  as={CustomSelect}\n                  invalid={errors.UnitRelativeUnit}\n                  rules={{ required: true }}\n                  placeholder={'Select a unit'}\n                  isDisabled={disableForm}\n                />\n              </InputGroup>\n            </Col>\n          </FormGroup>\n          <FormGroup>\n            <small className=\"text-muted\">\n              { UnitRelativeQuantity && UnitRelativeUnit ?\n                `1 ${UnitName} = ${Number(UnitRelativeQuantity) *UnitRelativeUnit.quantity}${UnitBase === '0'? 'g' : 'ml'}`\n                : ''}\n            </small>\n          </FormGroup>\n          <FormGroup>\n            <Button disabled={disableForm} type=\"submit\" color={'primary'}>Save</Button>\n            {existingUnit && <Button color={'primary'} className={'ml-4'} onClick={onDelete} disabled={disableForm} outline>Delete</Button>}\n          </FormGroup>\n        </form>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default UnitForm;",["317","318"],"D:\\project\\Pricer\\Pricer\\client\\src\\api\\client.ts",[],"D:\\project\\Pricer\\Pricer\\client\\src\\pages\\common\\LoadingPage.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\routes\\protected\\UtilRoutes.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\pages\\common\\NotFound.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\redux\\product\\ProductSlice.ts",[],"D:\\project\\Pricer\\Pricer\\client\\src\\redux\\unit\\UnitSlice.ts",[],"D:\\project\\Pricer\\Pricer\\client\\src\\redux\\unit\\updateUnit.ts",["319"],"import { ActionReducerMapBuilder, createAsyncThunk } from '@reduxjs/toolkit';\nimport { ApiClient } from '../../api/client';\nimport { Unit, UnitData } from '../../models/Unit';\nimport UnitState from './unitState';\nexport interface UpdateUnitData {\n  id: string;\n  unit: UnitData;\n}\n\n\nexport const updateUnit = createAsyncThunk(\n  'units/update',\n  async ({id, unit}: UpdateUnitData, thunkAPI): Promise<UpdateUnitData> => {\n    \n    const status = await ApiClient.updateUnit(id, unit);\n  \n    return {id, unit};\n  },\n);\n  \nexport const updateUnitReducers = (builder: ActionReducerMapBuilder<UnitState>) => {\n\n  builder.addCase(updateUnit.pending, (state, action ) => {\n    state.loading = true;\n  });\n  \n  builder.addCase(updateUnit.fulfilled, (state, {payload}) => {\n\n    state.loading = false;\n\n    delete state.units[payload.id].relativeUnitId;\n    delete state.units[payload.id].relativeQuantity;\n    state.units[payload.id] ={\n      ...state.units[payload.id],\n      ...payload.unit,\n      dateUpdated: Date.now(),\n    };\n  \n    // Need to recursively update other units that may use this unit as a reference\n    recursiveUpdateQuantities(state.units, state.units[payload.id]);\n  });\n  \n  builder.addCase(updateUnit.rejected, (state, action) => {\n    state.loading = false;\n  });\n      \n};\n\nconst recursiveUpdateQuantities = (units: {[key: string]: Unit}, unit: Unit)\n: {[key: string]: Unit} => {\n\n  // find all units that reference this unit.\n  // for each one, update it and call this function on it\n\n  let updatedUnits = units;\n\n  Object.values(units).forEach((v,i) => {\n    if(v.relativeUnitId === unit.id){\n      const tempUnit = units[v.id];\n      if(tempUnit.relativeQuantity){\n        units[v.id].quantity = tempUnit.relativeQuantity * unit.quantity;\n\n        // Need to update this\n        updatedUnits = recursiveUpdateQuantities(updatedUnits, units[v.id]);\n      }\n    }\n  });\n\n  return updatedUnits;\n};","D:\\project\\Pricer\\Pricer\\client\\src\\redux\\auth\\AuthSlice.ts",[],["320","321"],"D:\\project\\Pricer\\Pricer\\client\\src\\redux\\auth\\hydrateAuth.ts",[],["322","323"],"D:\\project\\Pricer\\Pricer\\client\\src\\redux\\unit\\deleteUnit.ts",[],"D:\\project\\Pricer\\Pricer\\client\\src\\redux\\auth\\logout.ts",[],"D:\\project\\Pricer\\Pricer\\client\\src\\redux\\auth\\login.ts",[],"D:\\project\\Pricer\\Pricer\\client\\src\\components\\ContainedContainer.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\components\\ScrollContainer.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\redux\\product\\createProduct.ts",[],"D:\\project\\Pricer\\Pricer\\client\\src\\routes\\protected\\UnitRoutes.tsx",[],["324","325"],"D:\\project\\Pricer\\Pricer\\client\\src\\redux\\unit\\createUnit.ts",[],["326","327"],"D:\\project\\Pricer\\Pricer\\client\\src\\redux\\unit\\fetchUnits.ts",[],"D:\\project\\Pricer\\Pricer\\client\\src\\redux\\product\\fetchProducts.ts",[],"D:\\project\\Pricer\\Pricer\\client\\src\\pages\\recipe\\RecipeModal.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\components\\SelectTable.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\components\\PagedTable.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\redux\\recipe\\RecipeSlice.ts",[],"D:\\project\\Pricer\\Pricer\\client\\src\\pages\\recipe\\RecipeIndex.tsx",["328"],"D:\\project\\Pricer\\Pricer\\client\\src\\routes\\protected\\RecipeRoutes.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\hooks\\useUserData.ts",[],"D:\\project\\Pricer\\Pricer\\client\\src\\redux\\recipe\\fetchRecipes.ts",[],"D:\\project\\Pricer\\Pricer\\client\\src\\pages\\recipe\\RecipeDetail\\RecipeDetailForm.tsx",["329"],"import React, { useEffect } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport {\n  Button,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  InputGroup,\n  Label,\n} from 'reactstrap';\nimport CustomSelect from '../../../components/CustomSelect';\nimport { Product } from '../../../models/Product';\nimport { RecipeItemDetail } from '../../../models/Recipe';\nimport { Unit } from '../../../models/Unit';\n\ninterface RecipeDetailFormFields {\n  itemUnitId: Option<Unit>;\n  itemQuantity: string;\n  itemText: string;\n  itemProductId: Option<Product>;\n}\n\ninterface RecipeDetailFormProps {\n  units: Array<Unit>;\n  products: Array<Product>;\n  disabled?: boolean;\n  existingItem?: RecipeItemDetail;\n  onSubmit: (data: RecipeItemDetail) => void;\n  onDelete: () => void;\n}\n\ninterface Option<T> {\n  label: string;\n  value: T;\n  isDisabled?: boolean;\n}\n\nconst RecipeDetailForm: React.FC<RecipeDetailFormProps> = ({\n  units,\n  products,\n  disabled,\n  existingItem,\n  onSubmit,\n  onDelete,\n}) => {\n  const toOption = <T extends { name: string }>(i: T): Option<T> => ({\n    label: i.name,\n    value: i,\n  });\n\n  const unitDropdownOptions: Array<Option<Unit>> = units.map((u) =>\n    toOption(u),\n  );\n  const productDropdownOptions: Array<Option<Product>> = products.map((u) =>\n    toOption(u),\n  );\n\n  const itemUnitId = unitDropdownOptions.find(\n    (o) => o.value.id === existingItem?.detail?.unitId,\n  );\n  const itemProductId = productDropdownOptions.find(\n    (o) => o.value.id === existingItem?.detail?.productId,\n  );\n\n  const defaultValues: Partial<RecipeDetailFormFields> = {\n    itemUnitId,\n    itemQuantity: existingItem?.detail?.quantity.toString(),\n    itemText: existingItem?.detail?.itemText.toString(),\n    itemProductId,\n  };\n\n  const {\n    register,\n    handleSubmit,\n    errors,\n    control,\n    reset,\n  } = useForm<RecipeDetailFormFields>({\n    defaultValues,\n  });\n\n  useEffect(() => {\n    reset(defaultValues);\n  }, [ existingItem ]);\n\n  const preSubmit = ({\n    itemUnitId,\n    itemQuantity,\n    itemText,\n    itemProductId,\n  }: RecipeDetailFormFields) => {\n    if (existingItem) {\n      const detail: RecipeItemDetail = {\n        plainText: existingItem?.plainText,\n        detail: {\n          itemText: itemText,\n          quantity: parseInt(itemQuantity),\n          unitId: itemUnitId.value.id,\n          productId: itemProductId.value.id,\n        },\n      };\n      onSubmit(detail);\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit(preSubmit)}>\n      <FormGroup>{existingItem?.plainText}</FormGroup>\n      <hr />\n      <FormGroup>\n        <Label>Item Name</Label>\n        <Input\n          name={'itemText'}\n          min={0}\n          innerRef={register({\n            required: true,\n          })}\n          invalid={Boolean(errors.itemQuantity)}\n          disabled={disabled}\n        />\n      </FormGroup>\n      <FormGroup row>\n        <Col>\n          <Label>Quantity</Label>\n          <InputGroup>\n            <Input\n              name={'itemQuantity'}\n              min={0}\n              innerRef={register({\n                required: true,\n                min: 0,\n              })}\n              invalid={Boolean(errors.itemQuantity)}\n              disabled={disabled}\n            />\n\n            <Controller\n              defaultValue={''}\n              className={'w-50 ml-3'}\n              name=\"itemUnitId\"\n              control={control}\n              options={unitDropdownOptions}\n              as={CustomSelect}\n              invalid={errors.itemUnitId}\n              rules={{ required: true }}\n              placeholder={'Select a unit'}\n              isDisabled={disabled}\n            />\n          </InputGroup>\n        </Col>\n      </FormGroup>\n      <FormGroup>\n        <Label>Product</Label>\n        <Controller\n          defaultValue={''}\n          name=\"itemProductId\"\n          control={control}\n          options={productDropdownOptions}\n          as={CustomSelect}\n          invalid={errors.itemProductId}\n          rules={{ required: true }}\n          placeholder={'Select a unit'}\n          isDisabled={disabled}\n        />\n      </FormGroup>\n      <FormGroup className={'mb-0'}>\n        <Button disabled={disabled} color={'primary'} type={'submit'}>\n          Submit\n        </Button>\n        <Button\n          disabled={disabled}\n          color={'primary'}\n          onClick={onDelete}\n          outline\n          className={'ml-4'}\n        >\n          Delete\n        </Button>\n      </FormGroup>\n    </Form>\n  );\n};\n\nexport default RecipeDetailForm;\n","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\recipe\\RecipeDetail\\RecipeDetail.tsx",["330"],"D:\\project\\Pricer\\Pricer\\client\\src\\pages\\recipe\\RecipeDetail\\AddIngredientsModal.tsx",["331","332"],"import React, { useState } from 'react';\nimport {\n  Button,\n\n  Label,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from 'reactstrap';\nimport { RecipeItemDetail } from '../../../models/Recipe';\nimport { addRecipeIngredients } from '../../../redux/recipe/addRecipeIngredients';\nimport { updateRecipeIngredients } from '../../../redux/recipe/updateRecipeIngredients';\nimport { useAppDispatch } from '../../../redux/store';\n\ninterface AddIngredientsModalProps {\n  modal: boolean;\n  setModal: React.Dispatch<React.SetStateAction<boolean>>;\n  recipeId: string;\n  onSubmit: (items: Array<RecipeItemDetail>) => Promise<any>;\n}\n\nconst AddIngredientsModal: React.FC<AddIngredientsModalProps> = ({\n  modal,\n  setModal,\n  recipeId,\n  onSubmit,\n}) => {\n\n  const [ ingredients, setIngredients ] = useState<string>('');\n  const [ loading, setLoading ] = useState<boolean>(false);\n\n  const preSubmit = async () => {\n    setLoading(true);\n\n    const items = ingredients.split('\\n');\n    const res = await onSubmit(items.map((i: string): RecipeItemDetail => ({plainText: i})));\n\n    if(updateRecipeIngredients.fulfilled.match(res)){\n      setIngredients('');\n      setModal(false);\n    }\n    setLoading(false);\n  };\n    \n  const toggle = () => {\n    setModal(false);\n  };\n\n  return (\n    <Modal isOpen={modal} toggle={toggle} centered>\n      <ModalHeader toggle={toggle}>Create Recipe</ModalHeader>\n      <ModalBody>\n        <Label>Enter Ingredients</Label><br/>\n        <small>Enter each ingredient on a new line</small>\n        <textarea\n          className={'form-control'}\n          value={ingredients}\n          onChange={(e) => setIngredients(e.target.value)}\n          disabled={loading}\n          rows={20}\n        />\n      </ModalBody>\n      <ModalFooter>\n        <Button\n          color=\"primary\"\n          onClick={preSubmit}\n          disabled={ingredients === '' || loading}\n        >\n          Confirm\n        </Button>{' '}\n        <Button color=\"primary\" outline onClick={toggle} disabled={loading}>\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default AddIngredientsModal;\n","D:\\project\\Pricer\\Pricer\\client\\src\\redux\\recipe\\addRecipeIngredients.ts",[],"D:\\project\\Pricer\\Pricer\\client\\src\\components\\Dot.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\redux\\recipe\\CreateRecipe.ts",[],"D:\\project\\Pricer\\Pricer\\client\\src\\util\\relativeDateString.ts",[],"D:\\project\\Pricer\\Pricer\\client\\src\\redux\\recipe\\updateRecipeIngredients.ts",[],"D:\\project\\Pricer\\Pricer\\client\\src\\pages\\recipe\\RecipeDetail\\RecipeAnalysisBox.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\pages\\recipe\\RecipeAnalysisOverview.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\redux\\recipe\\saveAnalysis.ts",[],"D:\\project\\Pricer\\Pricer\\client\\src\\redux\\recipe\\deleteRecipe.ts",["333"],{"ruleId":"334","replacedBy":"335"},{"ruleId":"336","replacedBy":"337"},{"ruleId":"338","severity":1,"message":"339","line":9,"column":10,"nodeType":"340","messageId":"341","endLine":9,"endColumn":23},{"ruleId":"338","severity":1,"message":"342","line":12,"column":10,"nodeType":"340","messageId":"341","endLine":12,"endColumn":20},{"ruleId":"343","severity":1,"message":"344","line":36,"column":6,"nodeType":"345","endLine":36,"endColumn":25,"suggestions":"346"},{"ruleId":"338","severity":1,"message":"347","line":23,"column":35,"nodeType":"340","messageId":"341","endLine":23,"endColumn":41},{"ruleId":"334","replacedBy":"348"},{"ruleId":"336","replacedBy":"349"},{"ruleId":"338","severity":1,"message":"350","line":4,"column":41,"nodeType":"340","messageId":"341","endLine":4,"endColumn":44},{"ruleId":"351","severity":1,"message":"352","line":53,"column":1,"nodeType":"353","messageId":"354","endLine":53,"endColumn":124},{"ruleId":"334","replacedBy":"355"},{"ruleId":"336","replacedBy":"356"},{"ruleId":"334","replacedBy":"357"},{"ruleId":"336","replacedBy":"358"},{"ruleId":"334","replacedBy":"359"},{"ruleId":"336","replacedBy":"360"},{"ruleId":"338","severity":1,"message":"361","line":3,"column":10,"nodeType":"340","messageId":"341","endLine":3,"endColumn":17},{"ruleId":"334","replacedBy":"362"},{"ruleId":"336","replacedBy":"363"},{"ruleId":"334","replacedBy":"364"},{"ruleId":"336","replacedBy":"365"},{"ruleId":"351","severity":1,"message":"366","line":3,"column":1,"nodeType":"353","messageId":"354","endLine":3,"endColumn":126},{"ruleId":"351","severity":1,"message":"367","line":120,"column":1,"nodeType":"353","messageId":"354","endLine":120,"endColumn":104},{"ruleId":"351","severity":1,"message":"368","line":22,"column":1,"nodeType":"353","messageId":"354","endLine":22,"endColumn":364},{"ruleId":"334","replacedBy":"369"},{"ruleId":"336","replacedBy":"370"},{"ruleId":"334","replacedBy":"371"},{"ruleId":"336","replacedBy":"372"},{"ruleId":"351","severity":1,"message":"373","line":3,"column":1,"nodeType":"353","messageId":"354","endLine":3,"endColumn":139},{"ruleId":"351","severity":1,"message":"367","line":46,"column":1,"nodeType":"353","messageId":"354","endLine":46,"endColumn":104},{"ruleId":"343","severity":1,"message":"374","line":74,"column":6,"nodeType":"345","endLine":74,"endColumn":22,"suggestions":"375"},{"ruleId":"351","severity":1,"message":"376","line":91,"column":1,"nodeType":"353","messageId":"354","endLine":91,"endColumn":103},{"ruleId":"351","severity":1,"message":"352","line":209,"column":1,"nodeType":"353","messageId":"354","endLine":209,"endColumn":124},{"ruleId":"351","severity":1,"message":"377","line":215,"column":1,"nodeType":"353","messageId":"354","endLine":215,"endColumn":141},{"ruleId":"334","replacedBy":"378"},{"ruleId":"336","replacedBy":"379"},{"ruleId":"338","severity":1,"message":"380","line":15,"column":11,"nodeType":"340","messageId":"341","endLine":15,"endColumn":17},{"ruleId":"334","replacedBy":"381"},{"ruleId":"336","replacedBy":"382"},{"ruleId":"334","replacedBy":"383"},{"ruleId":"336","replacedBy":"384"},{"ruleId":"334","replacedBy":"385"},{"ruleId":"336","replacedBy":"386"},{"ruleId":"334","replacedBy":"387"},{"ruleId":"336","replacedBy":"388"},{"ruleId":"338","severity":1,"message":"389","line":2,"column":10,"nodeType":"340","messageId":"341","endLine":2,"endColumn":14},{"ruleId":"343","severity":1,"message":"374","line":85,"column":6,"nodeType":"345","endLine":85,"endColumn":22,"suggestions":"390"},{"ruleId":"338","severity":1,"message":"391","line":3,"column":10,"nodeType":"340","messageId":"341","endLine":3,"endColumn":18},{"ruleId":"338","severity":1,"message":"392","line":12,"column":10,"nodeType":"340","messageId":"341","endLine":12,"endColumn":30},{"ruleId":"338","severity":1,"message":"393","line":14,"column":10,"nodeType":"340","messageId":"341","endLine":14,"endColumn":24},{"ruleId":"338","severity":1,"message":"394","line":9,"column":11,"nodeType":"340","messageId":"341","endLine":9,"endColumn":12},"no-native-reassign",["395"],"no-negated-in-lhs",["396"],"@typescript-eslint/no-unused-vars","'fetchProducts' is defined but never used.","Identifier","unusedVar","'fetchUnits' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["397"],"'errors' is assigned a value but never used.",["395"],["396"],"'Col' is defined but never used.","max-len","This line has a length of 123. Maximum allowed is 100.","Program","max",["395"],["396"],["395"],["396"],["395"],["396"],"'Spinner' is defined but never used.",["395"],["396"],["395"],["396"],"This line has a length of 125. Maximum allowed is 100.","This line has a length of 103. Maximum allowed is 100.","This line has a length of 363. Maximum allowed is 100.",["395"],["396"],["395"],["396"],"This line has a length of 138. Maximum allowed is 100.","React Hook useEffect has missing dependencies: 'defaultValues' and 'reset'. Either include them or remove the dependency array.",["398"],"This line has a length of 102. Maximum allowed is 100.","This line has a length of 140. Maximum allowed is 100.",["395"],["396"],"'status' is assigned a value but never used.",["395"],["396"],["395"],["396"],["395"],["396"],["395"],["396"],"'Link' is defined but never used.",["399"],"'Redirect' is defined but never used.","'addRecipeIngredients' is defined but never used.","'useAppDispatch' is defined but never used.","'a' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"400","fix":"401"},{"desc":"402","fix":"403"},{"desc":"404","fix":"405"},"Update the dependencies array to be: [fetchData, isAuthenticated]",{"range":"406","text":"407"},"Update the dependencies array to be: [defaultValues, existingUnit, reset]",{"range":"408","text":"409"},"Update the dependencies array to be: [defaultValues, existingItem, reset]",{"range":"410","text":"411"},[1023,1042],"[fetchData, isAuthenticated]",[2003,2019],"[defaultValues, existingUnit, reset]",[1932,1948],"[defaultValues, existingItem, reset]"]