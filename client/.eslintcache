[{"D:\\project\\Pricer\\Pricer\\client\\src\\reportWebVitals.ts":"1","D:\\project\\Pricer\\Pricer\\client\\src\\App.tsx":"2","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\auth\\Login.tsx":"3","D:\\project\\Pricer\\Pricer\\client\\src\\index.tsx":"4","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\dashboard\\Dashboard.tsx":"5","D:\\project\\Pricer\\Pricer\\client\\src\\components\\Navbar.tsx":"6","D:\\project\\Pricer\\Pricer\\client\\src\\util\\LoggerService.ts":"7","D:\\project\\Pricer\\Pricer\\client\\src\\util\\AuthService.ts":"8","D:\\project\\Pricer\\Pricer\\client\\src\\aws-exports.js":"9","D:\\project\\Pricer\\Pricer\\client\\src\\routes\\PublicRoutes.tsx":"10","D:\\project\\Pricer\\Pricer\\client\\src\\routes\\routeMap.tsx":"11","D:\\project\\Pricer\\Pricer\\client\\src\\routes\\ProtectedRoutes.tsx":"12","D:\\project\\Pricer\\Pricer\\client\\src\\redux\\store.ts":"13","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\product\\ProductIndex.tsx":"14","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\product\\CreateProduct.tsx":"15","D:\\project\\Pricer\\Pricer\\client\\src\\routes\\protected\\ProductRoutes.tsx":"16","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\product\\ProductForm.tsx":"17","D:\\project\\Pricer\\Pricer\\client\\src\\components\\CustomSelect.tsx":"18","D:\\project\\Pricer\\Pricer\\client\\src\\routes\\protected\\CoreRoutes.tsx":"19","D:\\project\\Pricer\\Pricer\\client\\src\\components\\HOC\\ConfirmationModal.tsx":"20","D:\\project\\Pricer\\Pricer\\client\\src\\components\\HOC\\withConfirmation.tsx":"21","D:\\project\\Pricer\\Pricer\\client\\src\\redux\\productSlice.ts":"22","D:\\project\\Pricer\\Pricer\\client\\src\\redux\\ProductSlice.ts":"23","D:\\project\\Pricer\\Pricer\\client\\src\\redux\\AuthSlice.ts":"24","D:\\project\\Pricer\\Pricer\\client\\src\\components\\HOC\\withInitialState.tsx":"25","D:\\project\\Pricer\\Pricer\\client\\src\\components\\HOC\\withReduxState.tsx":"26","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\product\\ProductTable.tsx":"27","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\product\\EditProduct.tsx":"28","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\util\\NotFound.tsx":"29"},{"size":425,"mtime":1608276046326,"results":"30","hashOfConfig":"31"},{"size":986,"mtime":1609291445848,"results":"32","hashOfConfig":"31"},{"size":2096,"mtime":1609292553164,"results":"33","hashOfConfig":"31"},{"size":865,"mtime":1609288911991,"results":"34","hashOfConfig":"31"},{"size":2546,"mtime":1609115829545,"results":"35","hashOfConfig":"31"},{"size":895,"mtime":1609290256423,"results":"36","hashOfConfig":"31"},{"size":194,"mtime":1608365311611,"results":"37","hashOfConfig":"31"},{"size":885,"mtime":1609288590169,"results":"38","hashOfConfig":"31"},{"size":489,"mtime":1608364462647,"results":"39","hashOfConfig":"31"},{"size":404,"mtime":1608432926356,"results":"40","hashOfConfig":"31"},{"size":855,"mtime":1608455040506,"results":"41","hashOfConfig":"31"},{"size":572,"mtime":1609495798252,"results":"42","hashOfConfig":"31"},{"size":470,"mtime":1609291524577,"results":"43","hashOfConfig":"31"},{"size":1606,"mtime":1609492916967,"results":"44","hashOfConfig":"31"},{"size":2404,"mtime":1609496164412,"results":"45","hashOfConfig":"31"},{"size":793,"mtime":1609493545340,"results":"46","hashOfConfig":"31"},{"size":4171,"mtime":1609474362044,"results":"47","hashOfConfig":"31"},{"size":2701,"mtime":1608502570910,"results":"48","hashOfConfig":"31"},{"size":383,"mtime":1608438297465,"results":"49","hashOfConfig":"31"},{"size":931,"mtime":1608507781045,"results":"50","hashOfConfig":"31"},{"size":1152,"mtime":1609114970287,"results":"51","hashOfConfig":"31"},{"size":1707,"mtime":1609289118208,"results":"52","hashOfConfig":"31"},{"size":1857,"mtime":1609474937364,"results":"53","hashOfConfig":"31"},{"size":1826,"mtime":1609291637645,"results":"54","hashOfConfig":"31"},{"size":519,"mtime":1609475096462,"results":"55","hashOfConfig":"31"},{"size":870,"mtime":1609559587412,"results":"56","hashOfConfig":"31"},{"size":2924,"mtime":1609495540452,"results":"57","hashOfConfig":"31"},{"size":1108,"mtime":1609559463445,"results":"58","hashOfConfig":"31"},{"size":581,"mtime":1609495989482,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1pveznh",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\project\\Pricer\\Pricer\\client\\src\\reportWebVitals.ts",[],["129","130"],"D:\\project\\Pricer\\Pricer\\client\\src\\App.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\pages\\auth\\Login.tsx",["131","132","133","134"],"import { Auth } from 'aws-amplify';\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport {\n  Alert,\n  Button,\n  Card,\n  CardBody,\n  CardTitle,\n  Col,\n  Container,\n  FormGroup,\n  Label,\n} from 'reactstrap';\nimport { login } from '../../redux/AuthSlice';\nimport { useAppDispatch } from '../../redux/store';\n\ninterface formData {\n  username: string;\n  password: string;\n}\n\nconst Login: React.FC = () => {\n  const { register, handleSubmit, errors } = useForm();\n  const dispatch = useAppDispatch();\n\n  const onSubmit = async ({username, password} : formData) => {\n\n    const res = await dispatch(login({username, password}));\n    if(login.rejected.match(res)){\n      console.log(res.error.message);\n    }\n  };\n\n  return (\n    <Container className={'min-vh-100 d-flex align-items-center'}>\n      <Col sm={6} className={'col-sm-12 col-md-6 offset-md-3'}>\n        <Card>\n          <CardBody>\n            <CardTitle tag=\"h1\">Login</CardTitle>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <FormGroup>\n                <Label>Username</Label>\n                <input\n                  name=\"username\"\n                  className={'form-control'}\n                  placeholder=\"Enter your username\"\n                  ref={register}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label>Password</Label>\n                <input\n                  type={'password'}\n                  name=\"password\"\n                  className={'form-control'}\n                  placeholder=\"Enter your password\"\n                  ref={register}\n                />\n              </FormGroup>\n              <FormGroup>\n                {true && <Alert color='danger'>Invalid username or password</Alert>}\n              </FormGroup>\n              <FormGroup>\n                <Button type=\"submit\" color={'primary'} block>Login</Button>\n              </FormGroup>\n            </form>\n      \n          </CardBody>\n        </Card>\n      </Col>\n    </Container>\n  );\n};\n\nexport default Login;",["135","136"],"D:\\project\\Pricer\\Pricer\\client\\src\\index.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\pages\\dashboard\\Dashboard.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\components\\Navbar.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\util\\LoggerService.ts",[],["137","138"],"D:\\project\\Pricer\\Pricer\\client\\src\\util\\AuthService.ts",[],"D:\\project\\Pricer\\Pricer\\client\\src\\aws-exports.js",[],["139","140"],"D:\\project\\Pricer\\Pricer\\client\\src\\routes\\PublicRoutes.tsx",[],["141","142"],"D:\\project\\Pricer\\Pricer\\client\\src\\routes\\routeMap.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\routes\\ProtectedRoutes.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\redux\\store.ts",[],"D:\\project\\Pricer\\Pricer\\client\\src\\pages\\product\\ProductIndex.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\pages\\product\\CreateProduct.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\routes\\protected\\ProductRoutes.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\pages\\product\\ProductForm.tsx",["143","144","145","146","147"],"import React from 'react';\nimport { Controller, FieldValues, useForm } from 'react-hook-form';\nimport { Button, Col, FormFeedback, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, Label, Row } from 'reactstrap';\nimport CustomSelect from '../../components/CustomSelect';\nimport { useAppDispatch } from '../../redux/store';\n\ninterface productFormProps {\n    onSubmit: (data: FieldValues) => void;\n    onCancel: () => void;\n    initialState?: productFormData;\n    units: Array<{value: string; label: string}>\n}\n\ninterface productFormData {\n    name: string;\n    cost: number;\n    quantity: number;\n    unit: string;\n    description?: string;\n    brand?: string;\n}\n\nconst ProductForm: React.FC<productFormProps> = ({onSubmit, onCancel, units}) => {\n\n  const { register, handleSubmit, errors, control } = useForm();\n\n  const initialState = {\n    name: 'peanut butter',\n    cost: 5.23,\n    quantity: 300,\n    unit: 'gram',\n  };\n\n  const preSubmit = (data : FieldValues) => {\n    Object.keys(data).forEach(key => {\n      if (data[key] === '' || data[key] == null) {\n        delete data[key];\n      }\n    });\n    onSubmit(data);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(preSubmit)}>\n      <FormGroup row>\n        <Col sm={6}>\n          <Label>Product Name</Label>\n          <Input\n            name=\"productName\"\n            placeholder=\"Enter a name for the product\"\n            innerRef={register({\n              required: true,\n            })}\n            invalid={errors.productName}\n          />\n          {errors.productName && <FormFeedback>Please enter a product name</FormFeedback>}\n        </Col>\n      </FormGroup>\n      <FormGroup row>\n        <Col sm={2}>\n          <Label>Cost</Label>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n              <InputGroupText>$</InputGroupText>\n            </InputGroupAddon>\n            <Input\n              name={'productPrice'}\n              type={'number'}\n              className={'rounded-right'}\n              placeholder={'0.00'}\n              min={0}\n              step={0.01}\n              innerRef={register({\n                required: true,\n                min: 0,\n              })}\n              invalid={errors.productPrice}\n            />\n            {errors.productPrice && <FormFeedback>Please enter a product price</FormFeedback>}\n          </InputGroup>\n        </Col>\n      </FormGroup>\n      <FormGroup row>\n        <Col sm={5}>\n          <Label>Quantity</Label>\n          <InputGroup>\n\n            <Input\n              name={'productQuantity'}\n              type={'number'}\n              className={'rounded'}\n              min={0}\n              innerRef={register({\n                required: true,\n                min: 0,\n              })}\n              invalid={errors.productQuantity}\n            />\n              \n            <Controller\n              className={'w-75 ml-3'}\n              name=\"productUnit\"\n              control={control}\n              options={units}\n              as={CustomSelect}\n              invalid={errors.productUnit}\n              rules={{ required: true }}\n              placeholder={'Select a unit'}\n            />\n\n            {errors.productQuantity && <FormFeedback>Please enter a valid quantity</FormFeedback>}\n          </InputGroup>\n        </Col>\n      </FormGroup>\n      <hr/>\n      <FormGroup row>\n        <Col sm={4}>\n          <Label>Brand <span className={'text-muted ml-2'}><small>Optional</small></span></Label>\n          <Input\n            name={'productBrand'}\n            innerRef={register}\n          />\n        </Col>\n      </FormGroup>\n      <FormGroup row>\n        <Col sm={6}>\n          <Label>Description <span className={'text-muted ml-2'}><small>Optional</small></span></Label>\n          <Input\n            name={'productDescription'}\n            type={'textarea'}\n            innerRef={register}\n          />\n        </Col>\n      </FormGroup>\n      <hr/>\n      <FormGroup>\n        <Button type=\"submit\" color={'primary'}>Save</Button>\n        <Button onClick={onCancel} color={'primary'} className={'ml-4'} outline>Cancel</Button>\n      </FormGroup>\n    </form>\n  );\n};\n\nexport default ProductForm;","D:\\project\\Pricer\\Pricer\\client\\src\\components\\CustomSelect.tsx",["148"],"import React from 'react';\nimport Select, { Props } from 'react-select';\n\nconst white = '#ffffff';\nconst bsBorderBlue = '#66afe9';\nconst bsBorderGrey = 'rgb(206, 212, 218)';\nconst bsBoxShadowBlue = 'inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba(102,175,233,.6);';\nconst bsBoxShadowGrey = 'inset 0 1px 1px rgba(0,0,0,.075);';\nconst bsBackgroundOption = '#f8f9fa';\nconst bsBackgroundOptionSelected = '#eeeeee';\nconst bsControlTextColor = '#555555';\nconst bsBorderError = '#dc3545';\nconst bsBoxShadowError = 'inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px #dc3545;';\n\n\ninterface customSelectProps extends Props {\n    invalid: boolean;\n}\n\nconst errStyles = {\n  PaddingRight: 'calc(1.5em + .75rem)',\n  background: 'url(\"data:image/svg+xml,%3csvg xmlns=\\'http://www.w3.org/2000/svg\\' width=\\'12\\' height=\\'12\\' fill=\\'none\\' stroke=\\'%23dc3545\\' viewBox=\\'0 0 12 12\\'%3e%3ccircle cx=\\'6\\' cy=\\'6\\' r=\\'4.5\\'/%3e%3cpath stroke-linejoin=\\'round\\' d=\\'M5.8 3.6h.4L6 6.5z\\'/%3e%3ccircle cx=\\'6\\' cy=\\'8.2\\' r=\\'.6\\' fill=\\'%23dc3545\\' stroke=\\'none\\'/%3e%3c/svg%3e\")',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition:'right calc(.375em + .1875rem) center',\n  backgroundSize:' calc(.75em + .375rem) calc(.75em + .375rem)',\n};\n\nconst CustomSelect : React.FC<customSelectProps> = ({invalid, ...rest}) => {\n\n  const styles = {\n    control: (base: any, state: { selectProps: { menuIsOpen?: any; }; }) => ({\n      ...base,\n      borderRadius: '.25rem',\n      backgroundColor: white,\n      borderColor: invalid?\n        bsBorderError\n        :\n        (state.selectProps.menuIsOpen ? bsBorderBlue : bsBorderGrey),\n      boxShadow: state.selectProps.menuIsOpen ?\n        (invalid? bsBoxShadowError : bsBoxShadowBlue)\n        :\n        bsBoxShadowGrey,\n      ':hover': {\n        borderColor: invalid?\n          bsBorderError\n          :\n          (state.selectProps.menuIsOpen ? bsBorderBlue : bsBorderGrey),\n        boxShadow: state.selectProps.menuIsOpen ?\n          (invalid? bsBoxShadowError : bsBoxShadowBlue)\n          :\n          bsBoxShadowGrey,\n      },\n    }),\n\n    indicatorSeparator: (base:any) => ({\n      ...base,\n      backgroundColor: invalid ? bsBorderError : bsBorderGrey,\n    }),\n  \n    option: (base: any, state: { isSelected: any; isFocused: any; }) => ({\n      ...base,\n      color: bsControlTextColor,\n      backgroundColor: state.isSelected\n        ? bsBackgroundOptionSelected\n        : state.isFocused ? bsBackgroundOption : white,\n    }),\n\n    valueContainer: (base: any) => ({\n      ...base,\n      ...(invalid ? errStyles : {}),\n    }),\n  };\n\n  return(\n    <>\n      <Select\n        styles={styles}\n        isClearable\n        { ...rest}\n      />\n    </>\n  );\n};\nexport default CustomSelect;",["149","150"],"D:\\project\\Pricer\\Pricer\\client\\src\\routes\\protected\\CoreRoutes.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\components\\HOC\\ConfirmationModal.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\components\\HOC\\withConfirmation.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\redux\\productSlice.ts",["151"],"D:\\project\\Pricer\\Pricer\\client\\src\\redux\\ProductSlice.ts",["152"],"import {\n  createAsyncThunk,\n  createSlice,\n  SliceCaseReducers,\n} from '@reduxjs/toolkit';\nimport { Product } from '../models/models';\nimport { v4 as uuidv4 } from 'uuid';\n\n\nexport type ProductState = {\n    count: number;\n    loading: boolean;\n    products: {[key: string]: Product};\n}\n\ninterface CreateProductData {\n    name: string;\n    brand?: string;\n    description?: string;\n    cost: number;\n    quantity: number;\n    units: string;\n}\n\nexport const createProduct = createAsyncThunk(\n  'products/createProduct',\n  async (productData: CreateProductData, thunkAPI): Promise<Product> => {\n\n    /**\n     * This is eventually where the api call will live\n     */\n    \n    // Do validation here\n    const product: Product = {\n      id: uuidv4(),\n      dateCreated: new Date(),\n      dateModified: new Date(),\n      ...productData,\n    };\n\n    console.log(product);\n\n    return product;\n\n\n  },\n);\n\nconst ProductSlice = createSlice<ProductState, SliceCaseReducers<ProductState>>({\n  name: 'products',\n  initialState: {\n    count: 0,\n    loading: false,\n    products: {},\n  },\n  reducers: {\n   \n  },\n  extraReducers: builder => {\n    builder.addCase(createProduct.pending, (state, action ) => {\n      state.loading = true;\n    });\n\n    builder.addCase(createProduct.fulfilled, (state, {payload}) => {\n      state.loading = false;\n      state.products[payload.id] = payload;\n      state.count = Object.keys(state.products).length;\n    });\n\n    builder.addCase(createProduct.rejected, (state, action) => {\n      state.loading = false;\n    });\n  },\n});\n  \n// Extract the action creators object and the reducer\nconst { actions, reducer } = ProductSlice;\n\n// Extract and export each action creator by name\n// export const { CreateProduct, updateProduct, deleteProduct } = actions;\n\n// Export the reducer, either as a default or named export\nexport default reducer;",["153","154"],"D:\\project\\Pricer\\Pricer\\client\\src\\redux\\AuthSlice.ts",[],"D:\\project\\Pricer\\Pricer\\client\\src\\components\\HOC\\withInitialState.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\components\\HOC\\withReduxState.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\pages\\product\\ProductTable.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\pages\\product\\EditProduct.tsx",["155"],"D:\\project\\Pricer\\Pricer\\client\\src\\pages\\util\\NotFound.tsx",[],{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":1,"column":10,"nodeType":"162","messageId":"163","endLine":1,"endColumn":14},{"ruleId":"160","severity":1,"message":"164","line":2,"column":17,"nodeType":"162","messageId":"163","endLine":2,"endColumn":25},{"ruleId":"160","severity":1,"message":"165","line":4,"column":10,"nodeType":"162","messageId":"163","endLine":4,"endColumn":21},{"ruleId":"160","severity":1,"message":"166","line":25,"column":35,"nodeType":"162","messageId":"163","endLine":25,"endColumn":41},{"ruleId":"156","replacedBy":"167"},{"ruleId":"158","replacedBy":"168"},{"ruleId":"156","replacedBy":"169"},{"ruleId":"158","replacedBy":"170"},{"ruleId":"156","replacedBy":"171"},{"ruleId":"158","replacedBy":"172"},{"ruleId":"156","replacedBy":"173"},{"ruleId":"158","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":3,"column":1,"nodeType":"177","messageId":"178","endLine":3,"endColumn":131},{"ruleId":"160","severity":1,"message":"179","line":3,"column":107,"nodeType":"162","messageId":"163","endLine":3,"endColumn":110},{"ruleId":"160","severity":1,"message":"180","line":5,"column":10,"nodeType":"162","messageId":"163","endLine":5,"endColumn":24},{"ruleId":"160","severity":1,"message":"181","line":27,"column":9,"nodeType":"162","messageId":"163","endLine":27,"endColumn":21},{"ruleId":"175","severity":1,"message":"182","line":127,"column":1,"nodeType":"177","messageId":"178","endLine":127,"endColumn":104},{"ruleId":"175","severity":1,"message":"183","line":22,"column":1,"nodeType":"177","messageId":"178","endLine":22,"endColumn":364},{"ruleId":"156","replacedBy":"184"},{"ruleId":"158","replacedBy":"185"},{"ruleId":"160","severity":1,"message":"186","line":72,"column":9,"nodeType":"162","messageId":"163","endLine":72,"endColumn":16},{"ruleId":"160","severity":1,"message":"186","line":77,"column":9,"nodeType":"162","messageId":"163","endLine":77,"endColumn":16},{"ruleId":"156","replacedBy":"187"},{"ruleId":"158","replacedBy":"188"},{"ruleId":"160","severity":1,"message":"189","line":7,"column":23,"nodeType":"162","messageId":"163","endLine":7,"endColumn":38},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"@typescript-eslint/no-unused-vars","'Auth' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useDispatch' is defined but never used.","'errors' is assigned a value but never used.",["190"],["191"],["190"],["191"],["190"],["191"],["190"],["191"],"max-len","This line has a length of 130. Maximum allowed is 100.","Program","max","'Row' is defined but never used.","'useAppDispatch' is defined but never used.","'initialState' is assigned a value but never used.","This line has a length of 103. Maximum allowed is 100.","This line has a length of 363. Maximum allowed is 100.",["190"],["191"],"'actions' is assigned a value but never used.",["190"],["191"],"'productFormData' is defined but never used.","no-global-assign","no-unsafe-negation"]