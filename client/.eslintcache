[{"D:\\project\\Pricer\\Pricer\\client\\src\\reportWebVitals.ts":"1","D:\\project\\Pricer\\Pricer\\client\\src\\App.tsx":"2","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\auth\\Login.tsx":"3","D:\\project\\Pricer\\Pricer\\client\\src\\index.tsx":"4","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\dashboard\\Dashboard.tsx":"5","D:\\project\\Pricer\\Pricer\\client\\src\\components\\Navbar.tsx":"6","D:\\project\\Pricer\\Pricer\\client\\src\\util\\LoggerService.ts":"7","D:\\project\\Pricer\\Pricer\\client\\src\\util\\AuthService.ts":"8","D:\\project\\Pricer\\Pricer\\client\\src\\aws-exports.js":"9","D:\\project\\Pricer\\Pricer\\client\\src\\routes\\PublicRoutes.tsx":"10","D:\\project\\Pricer\\Pricer\\client\\src\\routes\\routeMap.tsx":"11","D:\\project\\Pricer\\Pricer\\client\\src\\routes\\ProtectedRoutes.tsx":"12","D:\\project\\Pricer\\Pricer\\client\\src\\redux\\store.ts":"13","D:\\project\\Pricer\\Pricer\\client\\src\\redux\\reducers\\index.ts":"14","D:\\project\\Pricer\\Pricer\\client\\src\\redux\\constants\\actionTypes.ts":"15","D:\\project\\Pricer\\Pricer\\client\\src\\redux\\actions\\Auth.ts":"16","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\product\\ProductIndex.tsx":"17","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\product\\CreateProduct.tsx":"18","D:\\project\\Pricer\\Pricer\\client\\src\\routes\\protected\\ProductRoutes.tsx":"19","D:\\project\\Pricer\\Pricer\\client\\src\\pages\\product\\ProductForm.tsx":"20","D:\\project\\Pricer\\Pricer\\client\\src\\components\\CustomSelect.tsx":"21","D:\\project\\Pricer\\Pricer\\client\\src\\api\\client.ts":"22","D:\\project\\Pricer\\Pricer\\client\\src\\routes\\protected\\CoreRoutes.tsx":"23","D:\\project\\Pricer\\Pricer\\client\\src\\components\\HOC\\ConfirmationModal.tsx":"24","D:\\project\\Pricer\\Pricer\\client\\src\\components\\HOC\\withConfirmation.tsx":"25"},{"size":425,"mtime":1608276046326,"results":"26","hashOfConfig":"27"},{"size":1295,"mtime":1608447291044,"results":"28","hashOfConfig":"27"},{"size":2365,"mtime":1608440018030,"results":"29","hashOfConfig":"27"},{"size":835,"mtime":1608505070943,"results":"30","hashOfConfig":"27"},{"size":2480,"mtime":1608440070243,"results":"31","hashOfConfig":"27"},{"size":937,"mtime":1608441533897,"results":"32","hashOfConfig":"27"},{"size":194,"mtime":1608365311611,"results":"33","hashOfConfig":"27"},{"size":729,"mtime":1608407016969,"results":"34","hashOfConfig":"27"},{"size":489,"mtime":1608364462647,"results":"35","hashOfConfig":"27"},{"size":404,"mtime":1608432926356,"results":"36","hashOfConfig":"27"},{"size":855,"mtime":1608455040506,"results":"37","hashOfConfig":"27"},{"size":446,"mtime":1608438460310,"results":"38","hashOfConfig":"27"},{"size":631,"mtime":1608435028002,"results":"39","hashOfConfig":"27"},{"size":600,"mtime":1608434924093,"results":"40","hashOfConfig":"27"},{"size":61,"mtime":1608434980469,"results":"41","hashOfConfig":"27"},{"size":153,"mtime":1608435187664,"results":"42","hashOfConfig":"27"},{"size":3150,"mtime":1608458856094,"results":"43","hashOfConfig":"27"},{"size":1608,"mtime":1608507880756,"results":"44","hashOfConfig":"27"},{"size":607,"mtime":1608458882429,"results":"45","hashOfConfig":"27"},{"size":4169,"mtime":1608507580665,"results":"46","hashOfConfig":"27"},{"size":2701,"mtime":1608502570910,"results":"47","hashOfConfig":"27"},{"size":385,"mtime":1608504179858,"results":"48","hashOfConfig":"27"},{"size":383,"mtime":1608438297465,"results":"49","hashOfConfig":"27"},{"size":931,"mtime":1608507781045,"results":"50","hashOfConfig":"27"},{"size":1034,"mtime":1608507808397,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1pveznh",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\project\\Pricer\\Pricer\\client\\src\\reportWebVitals.ts",[],["110","111"],"D:\\project\\Pricer\\Pricer\\client\\src\\App.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\pages\\auth\\Login.tsx",["112"],"D:\\project\\Pricer\\Pricer\\client\\src\\index.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\pages\\dashboard\\Dashboard.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\components\\Navbar.tsx",["113"],"import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button, Nav, NavItem, NavLink } from 'reactstrap';\nimport { logout } from '../redux/actions/Auth';\n\nconst Navbar: React.FC = () => {\n\n  const dispatch = useDispatch();\n  return(\n\n    <>\n      <Nav className={'my-3'}>\n        <NavItem className={'mr-4'}>\n          <h4>Pricer</h4>\n        </NavItem>\n        <NavItem>\n          <NavLink href=\"/\">Dashboard</NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink href=\"/recipes\">Recipes</NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink href=\"/products\">Products</NavLink>\n        </NavItem>\n        <NavItem className={'ml-auto'}>\n          <Button outline color={'primary'} onClick={() => {\n            dispatch(logout());\n          }}>Sign Out</Button>\n        </NavItem>\n      </Nav>\n      <hr />\n    </>\n  )\n  ;\n};\n\nexport default Navbar;",["114","115"],"D:\\project\\Pricer\\Pricer\\client\\src\\util\\LoggerService.ts",[],["116","117"],"D:\\project\\Pricer\\Pricer\\client\\src\\util\\AuthService.ts",[],"D:\\project\\Pricer\\Pricer\\client\\src\\aws-exports.js",[],"D:\\project\\Pricer\\Pricer\\client\\src\\routes\\PublicRoutes.tsx",[],["118","119"],"D:\\project\\Pricer\\Pricer\\client\\src\\routes\\routeMap.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\routes\\ProtectedRoutes.tsx",[],["120","121"],"D:\\project\\Pricer\\Pricer\\client\\src\\redux\\store.ts",[],"D:\\project\\Pricer\\Pricer\\client\\src\\redux\\reducers\\index.ts",[],"D:\\project\\Pricer\\Pricer\\client\\src\\redux\\constants\\actionTypes.ts",[],"D:\\project\\Pricer\\Pricer\\client\\src\\redux\\actions\\Auth.ts",[],"D:\\project\\Pricer\\Pricer\\client\\src\\pages\\product\\ProductIndex.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\pages\\product\\CreateProduct.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\routes\\protected\\ProductRoutes.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\pages\\product\\ProductForm.tsx",["122","123","124","125"],"import React from 'react';\nimport { Controller, FieldValues, useForm } from 'react-hook-form';\nimport { Button, Col, FormFeedback, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, Label, Row } from 'reactstrap';\nimport CustomSelect from '../../components/CustomSelect';\n\ninterface productFormProps {\n    onSubmit: (data: FieldValues) => void;\n    onCancel: () => void;\n    initialState?: productFormData;\n}\n\ninterface productFormData {\n    name: string;\n    cost: number;\n    quantity: number;\n    unit: string;\n    description?: string;\n    brand?: string;\n}\n\nconst ProductForm: React.FC<productFormProps> = ({onSubmit, onCancel}) => {\n\n  const { register, handleSubmit, errors, control } = useForm();\n\n  const initialState = {\n    name: 'peanut butter',\n    cost: 5.23,\n    quantity: 300,\n    unit: 'gram',\n  };\n\n  const units = [\n    {value: 'g', label: 'Grams (g)'},\n    {value: 'kg', label: 'Kilograms (kg)'},\n  ];\n\n  const preSubmit = (data : FieldValues) => {\n    Object.keys(data).forEach(key => {\n      if (data[key] === '' || data[key] == null) {\n        delete data[key];\n      }\n    });\n    onSubmit(data);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(preSubmit)}>\n      <FormGroup row>\n        <Col sm={6}>\n          <Label>Product Name</Label>\n          <Input\n            name=\"productName\"\n            placeholder=\"Enter a name for the product\"\n            innerRef={register({\n              required: true,\n            })}\n            invalid={errors.productName}\n          />\n          {errors.productName && <FormFeedback>Please enter a product name</FormFeedback>}\n        </Col>\n      </FormGroup>\n      <FormGroup row>\n        <Col sm={2}>\n          <Label>Cost</Label>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n              <InputGroupText>$</InputGroupText>\n            </InputGroupAddon>\n            <Input\n              name={'productPrice'}\n              type={'number'}\n              className={'rounded-right'}\n              placeholder={'0.00'}\n              min={0}\n              step={0.01}\n              innerRef={register({\n                required: true,\n                min: 0,\n              })}\n              invalid={errors.productPrice}\n            />\n            {errors.productPrice && <FormFeedback>Please enter a product price</FormFeedback>}\n          </InputGroup>\n        </Col>\n      </FormGroup>\n      <FormGroup row>\n        <Col sm={5}>\n          <Label>Quantity</Label>\n          <InputGroup>\n\n            <Input\n              name={'productQuantity'}\n              type={'number'}\n              className={'rounded'}\n              min={0}\n              innerRef={register({\n                required: true,\n                min: 0,\n              })}\n              invalid={errors.productQuantity}\n            />\n              \n            <Controller\n              className={'w-75 ml-3'}\n              name=\"productUnit\"\n              control={control}\n              options={units}\n              as={CustomSelect}\n              invalid={errors.productUnit}\n              rules={{ required: true }}\n              placeholder={'Select a unit'}\n            />\n\n            {errors.productQuantity && <FormFeedback>Please enter a valid quantity</FormFeedback>}\n          </InputGroup>\n        </Col>\n      </FormGroup>\n      <hr/>\n      <FormGroup row>\n        <Col sm={4}>\n          <Label>Brand <span className={'text-muted ml-2'}><small>Optional</small></span></Label>\n          <Input\n            name={'productBrand'}\n            innerRef={register}\n          />\n        </Col>\n      </FormGroup>\n      <FormGroup row>\n        <Col sm={6}>\n          <Label>Description <span className={'text-muted ml-2'}><small>Optional</small></span></Label>\n          <Input\n            name={'productDescription'}\n            type={'textarea'}\n            innerRef={register}\n          />\n        </Col>\n      </FormGroup>\n      <hr/>\n      <FormGroup>\n        <Button type=\"submit\" color={'primary'}>Save</Button>\n        <Button onClick={onCancel} color={'primary'} className={'ml-4'} outline>Cancel</Button>\n      </FormGroup>\n    </form>\n  );\n};\n\nexport default ProductForm;","D:\\project\\Pricer\\Pricer\\client\\src\\components\\CustomSelect.tsx",["126"],"import React from 'react';\nimport Select, { Props } from 'react-select';\n\nconst white = '#ffffff';\nconst bsBorderBlue = '#66afe9';\nconst bsBorderGrey = 'rgb(206, 212, 218)';\nconst bsBoxShadowBlue = 'inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba(102,175,233,.6);';\nconst bsBoxShadowGrey = 'inset 0 1px 1px rgba(0,0,0,.075);';\nconst bsBackgroundOption = '#f8f9fa';\nconst bsBackgroundOptionSelected = '#eeeeee';\nconst bsControlTextColor = '#555555';\nconst bsBorderError = '#dc3545';\nconst bsBoxShadowError = 'inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px #dc3545;';\n\n\ninterface customSelectProps extends Props {\n    invalid: boolean;\n}\n\nconst errStyles = {\n  PaddingRight: 'calc(1.5em + .75rem)',\n  background: 'url(\"data:image/svg+xml,%3csvg xmlns=\\'http://www.w3.org/2000/svg\\' width=\\'12\\' height=\\'12\\' fill=\\'none\\' stroke=\\'%23dc3545\\' viewBox=\\'0 0 12 12\\'%3e%3ccircle cx=\\'6\\' cy=\\'6\\' r=\\'4.5\\'/%3e%3cpath stroke-linejoin=\\'round\\' d=\\'M5.8 3.6h.4L6 6.5z\\'/%3e%3ccircle cx=\\'6\\' cy=\\'8.2\\' r=\\'.6\\' fill=\\'%23dc3545\\' stroke=\\'none\\'/%3e%3c/svg%3e\")',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition:'right calc(.375em + .1875rem) center',\n  backgroundSize:' calc(.75em + .375rem) calc(.75em + .375rem)',\n};\n\nconst CustomSelect : React.FC<customSelectProps> = ({invalid, ...rest}) => {\n\n  const styles = {\n    control: (base: any, state: { selectProps: { menuIsOpen?: any; }; }) => ({\n      ...base,\n      borderRadius: '.25rem',\n      backgroundColor: white,\n      borderColor: invalid?\n        bsBorderError\n        :\n        (state.selectProps.menuIsOpen ? bsBorderBlue : bsBorderGrey),\n      boxShadow: state.selectProps.menuIsOpen ?\n        (invalid? bsBoxShadowError : bsBoxShadowBlue)\n        :\n        bsBoxShadowGrey,\n      ':hover': {\n        borderColor: invalid?\n          bsBorderError\n          :\n          (state.selectProps.menuIsOpen ? bsBorderBlue : bsBorderGrey),\n        boxShadow: state.selectProps.menuIsOpen ?\n          (invalid? bsBoxShadowError : bsBoxShadowBlue)\n          :\n          bsBoxShadowGrey,\n      },\n    }),\n\n    indicatorSeparator: (base:any) => ({\n      ...base,\n      backgroundColor: invalid ? bsBorderError : bsBorderGrey,\n    }),\n  \n    option: (base: any, state: { isSelected: any; isFocused: any; }) => ({\n      ...base,\n      color: bsControlTextColor,\n      backgroundColor: state.isSelected\n        ? bsBackgroundOptionSelected\n        : state.isFocused ? bsBackgroundOption : white,\n    }),\n\n    valueContainer: (base: any) => ({\n      ...base,\n      ...(invalid ? errStyles : {}),\n    }),\n  };\n\n  return(\n    <>\n      <Select\n        styles={styles}\n        isClearable\n        { ...rest}\n      />\n    </>\n  );\n};\nexport default CustomSelect;","D:\\project\\Pricer\\Pricer\\client\\src\\api\\client.ts",[],"D:\\project\\Pricer\\Pricer\\client\\src\\routes\\protected\\CoreRoutes.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\components\\HOC\\ConfirmationModal.tsx",[],"D:\\project\\Pricer\\Pricer\\client\\src\\components\\HOC\\withConfirmation.tsx",[],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":5,"column":1,"nodeType":"133","messageId":"134","endLine":5,"endColumn":105},{"ruleId":"135","severity":1,"message":"136","line":3,"column":10,"nodeType":"137","messageId":"138","endLine":3,"endColumn":14},{"ruleId":"127","replacedBy":"139"},{"ruleId":"129","replacedBy":"140"},{"ruleId":"127","replacedBy":"141"},{"ruleId":"129","replacedBy":"142"},{"ruleId":"127","replacedBy":"143"},{"ruleId":"129","replacedBy":"144"},{"ruleId":"127","replacedBy":"145"},{"ruleId":"129","replacedBy":"146"},{"ruleId":"131","severity":1,"message":"147","line":3,"column":1,"nodeType":"133","messageId":"134","endLine":3,"endColumn":131},{"ruleId":"135","severity":1,"message":"148","line":3,"column":107,"nodeType":"137","messageId":"138","endLine":3,"endColumn":110},{"ruleId":"135","severity":1,"message":"149","line":25,"column":9,"nodeType":"137","messageId":"138","endLine":25,"endColumn":21},{"ruleId":"131","severity":1,"message":"150","line":130,"column":1,"nodeType":"133","messageId":"134","endLine":130,"endColumn":104},{"ruleId":"131","severity":1,"message":"151","line":22,"column":1,"nodeType":"133","messageId":"134","endLine":22,"endColumn":364},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"max-len","This line has a length of 104. Maximum allowed is 100.","Program","max","@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar",["152"],["153"],["152"],["153"],["152"],["153"],["152"],["153"],"This line has a length of 130. Maximum allowed is 100.","'Row' is defined but never used.","'initialState' is assigned a value but never used.","This line has a length of 103. Maximum allowed is 100.","This line has a length of 363. Maximum allowed is 100.","no-global-assign","no-unsafe-negation"]